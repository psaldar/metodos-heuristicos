2020-11-11 08:31:10,764 - 11112 - root - INFO - ************************************************************
2020-11-11 08:31:10,765 - 11112 - root - INFO - INICIA ALGORITMO GENETICO
2020-11-11 08:31:10,765 - 11112 - root - INFO - ************************************************************
2020-11-11 08:36:32,622 - 11112 - root - INFO - generacion 0 de 20
2020-11-11 08:48:55,701 - 11112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 0
2020-11-11 08:48:55,701 - 11112 - root - INFO - Entra a bin cont
2020-11-11 08:51:35,981 - 11112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 08:51:35,982 - 11112 - root - INFO - generacion 1 de 20
2020-11-11 09:05:44,866 - 11112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 1
2020-11-11 09:05:44,867 - 11112 - root - INFO - Entra a bin cont
2020-11-11 09:08:30,381 - 11112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 09:08:30,381 - 11112 - root - INFO - generacion 2 de 20
2020-11-11 09:24:36,961 - 11112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 2
2020-11-11 09:24:36,961 - 11112 - root - INFO - Entra a bin cont
2020-11-11 09:27:27,086 - 11112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 09:27:27,087 - 11112 - root - INFO - generacion 3 de 20
2020-11-11 09:42:01,016 - 11112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 3
2020-11-11 09:42:01,016 - 11112 - root - INFO - Entra a bin cont
2020-11-11 09:43:52,019 - 11112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 09:43:52,020 - 11112 - root - INFO - generacion 4 de 20
2020-11-11 09:53:37,845 - 11112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 4
2020-11-11 09:53:37,845 - 11112 - root - INFO - Entra a bin cont
2020-11-11 09:55:18,990 - 11112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 09:55:18,991 - 11112 - root - INFO - generacion 5 de 20
2020-11-11 10:05:06,344 - 11112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 5
2020-11-11 10:05:06,344 - 11112 - root - INFO - Entra a bin cont
2020-11-11 10:07:30,331 - 11112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 10:07:30,331 - 11112 - root - INFO - generacion 6 de 20
2020-11-11 10:15:03,827 - 11112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 6
2020-11-11 10:15:03,827 - 11112 - root - INFO - Entra a bin cont
2020-11-11 10:16:41,737 - 11112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 10:16:41,738 - 11112 - root - INFO - generacion 7 de 20
2020-11-11 10:27:29,101 - 11112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 7
2020-11-11 10:27:29,101 - 11112 - root - INFO - Entra a bin cont
2020-11-11 10:29:17,146 - 11112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 10:29:17,147 - 11112 - root - INFO - generacion 8 de 20
2020-11-11 10:39:35,056 - 11112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 8
2020-11-11 10:39:35,056 - 11112 - root - INFO - Entra a bin cont
2020-11-11 10:41:38,902 - 11112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 10:41:38,903 - 11112 - root - INFO - generacion 9 de 20
2020-11-11 10:52:09,178 - 11112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 9
2020-11-11 10:52:09,178 - 11112 - root - INFO - Entra a bin cont
2020-11-11 10:54:21,421 - 11112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 10:54:21,422 - 11112 - root - INFO - generacion 10 de 20
2020-11-11 11:03:50,280 - 11112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 10
2020-11-11 11:03:50,280 - 11112 - root - INFO - Entra a bin cont
2020-11-11 11:05:52,008 - 11112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 11:05:52,009 - 11112 - root - INFO - generacion 11 de 20
2020-11-11 11:11:48,338 - 11112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 11
2020-11-11 11:11:48,338 - 11112 - root - INFO - Entra a bin cont
2020-11-11 11:12:30,128 - 11112 - root - INFO - Mejora la solucion con la busqueda local: {'layer_sizes': (7, 72, 94), 'activation': 'identity', 'alpha': 0.02044677734375, 'alpha_bin': array([1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1630859375, 'learning_rate_init_bin': array([0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0]), 'fitness': 0.783549102284284}
2020-11-11 11:12:30,128 - 11112 - root - INFO - Encuentra mejor solucion en busqueda local
2020-11-11 11:12:30,128 - 11112 - root - INFO - Agrega a la poblacion el mejor individuo de LS
2020-11-11 11:12:30,130 - 11112 - root - INFO - generacion 12 de 20
2020-11-11 11:19:41,595 - 11112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 12
2020-11-11 11:19:41,595 - 11112 - root - INFO - Entra a bin cont
2020-11-11 11:21:58,646 - 11112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 11:21:58,647 - 11112 - root - INFO - generacion 13 de 20
2020-11-11 11:26:40,596 - 11112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 13
2020-11-11 11:26:40,596 - 11112 - root - INFO - Entra a bin cont
2020-11-11 11:27:34,946 - 11112 - root - INFO - Mejora la solucion con la busqueda local: {'layer_sizes': (7, 72, 94), 'activation': 'identity', 'alpha': 0.01983642578125, 'alpha_bin': array([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1708984375, 'learning_rate_init_bin': array([0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0]), 'fitness': 0.7836479407319721}
2020-11-11 11:27:34,946 - 11112 - root - INFO - Encuentra mejor solucion en busqueda local
2020-11-11 11:27:34,947 - 11112 - root - INFO - Agrega a la poblacion el mejor individuo de LS
2020-11-11 11:27:34,948 - 11112 - root - INFO - generacion 14 de 20
2020-11-11 11:31:58,047 - 11112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 14
2020-11-11 11:31:58,047 - 11112 - root - INFO - Entra a bin cont
2020-11-11 11:33:46,499 - 11112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 11:33:46,500 - 11112 - root - INFO - generacion 15 de 20
2020-11-11 11:38:53,586 - 11112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 15
2020-11-11 11:38:53,586 - 11112 - root - INFO - Entra a bin cont
2020-11-11 11:41:16,673 - 11112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 11:41:16,674 - 11112 - root - INFO - generacion 16 de 20
2020-11-11 11:45:58,631 - 11112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 16
2020-11-11 11:45:58,631 - 11112 - root - INFO - Entra a bin cont
2020-11-11 11:48:31,639 - 11112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 11:48:31,640 - 11112 - root - INFO - generacion 17 de 20
2020-11-11 11:52:42,083 - 11112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 17
2020-11-11 11:52:42,083 - 11112 - root - INFO - Entra a bin cont
2020-11-11 11:55:02,791 - 11112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 11:55:02,792 - 11112 - root - INFO - generacion 18 de 20
2020-11-11 11:59:30,508 - 11112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 18
2020-11-11 11:59:30,508 - 11112 - root - INFO - Entra a bin cont
2020-11-11 12:02:05,160 - 11112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 12:02:05,161 - 11112 - root - INFO - generacion 19 de 20
2020-11-11 12:06:29,654 - 11112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 19
2020-11-11 12:06:29,654 - 11112 - root - INFO - Entra a bin cont
2020-11-11 12:08:29,119 - 11112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 12:08:35,519 - 11112 - root - INFO - ************************************************************
2020-11-11 12:08:35,519 - 11112 - root - INFO - FIN ALGORITMO GENETICO: tiempo 13044.7331 mins
2020-11-11 12:08:35,519 - 11112 - root - INFO - ************************************************************
2020-11-11 12:08:35,519 - 11112 - root - INFO - La mejor solucion fue
2020-11-11 12:08:35,519 - 11112 - root - INFO - {'layer_sizes': (7, 72, 94), 'activation': 'identity', 'alpha': 0.01983642578125, 'alpha_bin': '[1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]', 'learning_rate_init': 0.1708984375, 'learning_rate_init_bin': '[0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0]', 'fitness': 0.7836479407319721}
2020-11-11 12:20:28,204 - 2204 - root - INFO - ************************************************************
2020-11-11 12:20:28,205 - 2204 - root - INFO - INICIA ALGORITMO GENETICO
2020-11-11 12:20:28,205 - 2204 - root - INFO - ************************************************************
2020-11-11 12:25:44,513 - 2204 - root - INFO - generacion 0 de 20
2020-11-11 12:38:42,141 - 2204 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 0
2020-11-11 12:38:42,141 - 2204 - root - INFO - Entra a bin cont
2020-11-11 12:46:28,300 - 2204 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 12:46:28,301 - 2204 - root - INFO - generacion 1 de 20
2020-11-11 13:00:46,635 - 2204 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 1
2020-11-11 13:00:46,635 - 2204 - root - INFO - Entra a bin cont
2020-11-11 13:08:41,588 - 2204 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 13:08:41,589 - 2204 - root - INFO - generacion 2 de 20
2020-11-11 13:22:42,038 - 2204 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 2
2020-11-11 13:22:42,038 - 2204 - root - INFO - Entra a bin cont
2020-11-11 13:25:31,456 - 2204 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 13:25:31,457 - 2204 - root - INFO - generacion 3 de 20
2020-11-11 13:38:31,459 - 2204 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 3
2020-11-11 13:38:31,459 - 2204 - root - INFO - Entra a bin cont
2020-11-11 13:42:27,065 - 2204 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 13:42:27,066 - 2204 - root - INFO - generacion 4 de 20
2020-11-11 13:56:55,570 - 2204 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 4
2020-11-11 13:56:55,570 - 2204 - root - INFO - Entra a bin cont
2020-11-11 13:59:27,702 - 2204 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 13:59:27,703 - 2204 - root - INFO - generacion 5 de 20
2020-11-11 14:13:13,006 - 2204 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 5
2020-11-11 14:13:13,006 - 2204 - root - INFO - Entra a bin cont
2020-11-11 14:15:53,135 - 2204 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 14:15:53,136 - 2204 - root - INFO - generacion 6 de 20
2020-11-11 14:30:22,569 - 2204 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 6
2020-11-11 14:30:22,569 - 2204 - root - INFO - Entra a bin cont
2020-11-11 14:32:58,627 - 2204 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 14:32:58,628 - 2204 - root - INFO - generacion 7 de 20
2020-11-11 14:45:59,647 - 2204 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 7
2020-11-11 14:45:59,647 - 2204 - root - INFO - Entra a bin cont
2020-11-11 14:48:40,440 - 2204 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 14:48:40,442 - 2204 - root - INFO - generacion 8 de 20
2020-11-11 15:00:01,685 - 2204 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 8
2020-11-11 15:00:01,685 - 2204 - root - INFO - Entra a bin cont
2020-11-11 15:03:22,858 - 2204 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 15:03:22,859 - 2204 - root - INFO - generacion 9 de 20
2020-11-11 15:15:43,171 - 2204 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 9
2020-11-11 15:15:43,171 - 2204 - root - INFO - Entra a bin cont
2020-11-11 15:18:31,474 - 2204 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 15:18:31,475 - 2204 - root - INFO - generacion 10 de 20
2020-11-11 15:28:58,410 - 2204 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 10
2020-11-11 15:28:58,410 - 2204 - root - INFO - Entra a bin cont
2020-11-11 15:31:55,609 - 2204 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 15:31:55,610 - 2204 - root - INFO - generacion 11 de 20
2020-11-11 15:39:50,866 - 2204 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 11
2020-11-11 15:39:50,866 - 2204 - root - INFO - Entra a bin cont
2020-11-11 15:42:41,761 - 2204 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 15:42:41,762 - 2204 - root - INFO - generacion 12 de 20
2020-11-11 15:48:20,063 - 2204 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 12
2020-11-11 15:48:20,063 - 2204 - root - INFO - Entra a bin cont
2020-11-11 15:51:15,397 - 2204 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 15:51:15,398 - 2204 - root - INFO - generacion 13 de 20
2020-11-11 15:56:57,733 - 2204 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 13
2020-11-11 15:56:57,733 - 2204 - root - INFO - Entra a bin cont
2020-11-11 15:59:52,819 - 2204 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 15:59:52,820 - 2204 - root - INFO - generacion 14 de 20
2020-11-11 16:06:01,099 - 2204 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 14
2020-11-11 16:06:01,100 - 2204 - root - INFO - Entra a bin cont
2020-11-11 16:08:59,512 - 2204 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 16:08:59,513 - 2204 - root - INFO - generacion 15 de 20
2020-11-11 16:16:24,344 - 2204 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 15
2020-11-11 16:16:24,345 - 2204 - root - INFO - Entra a bin cont
2020-11-11 16:20:14,412 - 2204 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 16:20:14,414 - 2204 - root - INFO - generacion 16 de 20
2020-11-11 16:27:01,813 - 2204 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 16
2020-11-11 16:27:01,813 - 2204 - root - INFO - Entra a bin cont
2020-11-11 16:29:55,323 - 2204 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 16:29:55,324 - 2204 - root - INFO - generacion 17 de 20
2020-11-11 16:35:12,654 - 2204 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 17
2020-11-11 16:35:12,655 - 2204 - root - INFO - Entra a bin cont
2020-11-11 16:38:34,594 - 2204 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 16:38:34,595 - 2204 - root - INFO - generacion 18 de 20
2020-11-11 16:43:58,260 - 2204 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 18
2020-11-11 16:43:58,260 - 2204 - root - INFO - Entra a bin cont
2020-11-11 16:46:31,895 - 2204 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 16:46:31,896 - 2204 - root - INFO - generacion 19 de 20
2020-11-11 16:52:08,067 - 2204 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 19
2020-11-11 16:52:08,068 - 2204 - root - INFO - Entra a bin cont
2020-11-11 16:55:17,779 - 2204 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 16:55:22,979 - 2204 - root - INFO - ************************************************************
2020-11-11 16:55:22,979 - 2204 - root - INFO - FIN ALGORITMO GENETICO: tiempo 16494.7491 mins
2020-11-11 16:55:22,979 - 2204 - root - INFO - ************************************************************
2020-11-11 16:55:22,979 - 2204 - root - INFO - La mejor solucion fue
2020-11-11 16:55:22,979 - 2204 - root - INFO - {'layer_sizes': (9, 50, 18), 'activation': 'identity', 'alpha': 0.00592041015625, 'alpha_bin': '[0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0]', 'learning_rate_init': 1.246337890625, 'learning_rate_init_bin': '[0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]', 'fitness': 0.7829022091602195}
2020-11-11 18:59:48,339 - 3760 - root - INFO - ************************************************************
2020-11-11 18:59:48,340 - 3760 - root - INFO - INICIA ALGORITMO GENETICO
2020-11-11 18:59:48,340 - 3760 - root - INFO - ************************************************************
2020-11-11 19:06:15,578 - 3760 - root - INFO - generacion 0 de 20
2020-11-11 19:11:21,282 - 3760 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 0
2020-11-11 19:12:11,010 - 3760 - root - INFO - Mejora la solucion con la busqueda local: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7807811401518505}
2020-11-11 19:12:11,010 - 3760 - root - INFO - Encuentra mejor solucion en busqueda local
2020-11-11 19:12:11,010 - 3760 - root - INFO - Agrega a la poblacion el mejor individuo de LS
2020-11-11 19:12:11,012 - 3760 - root - INFO - generacion 1 de 20
2020-11-11 19:19:48,265 - 3760 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 1
2020-11-11 19:25:43,266 - 3760 - root - INFO - Mejora la solucion con la busqueda local: {'layer_sizes': (42, 114, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7814658127356289}
2020-11-11 19:25:43,266 - 3760 - root - INFO - Encuentra mejor solucion en busqueda local
2020-11-11 19:25:43,267 - 3760 - root - INFO - Agrega a la poblacion el mejor individuo de LS
2020-11-11 19:25:43,268 - 3760 - root - INFO - generacion 2 de 20
2020-11-11 19:33:13,672 - 3760 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 2
2020-11-11 19:35:05,498 - 3760 - root - INFO - Mejora la solucion con la busqueda local: {'layer_sizes': (42, 114, 62), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7818866021060699}
2020-11-11 19:35:05,498 - 3760 - root - INFO - Encuentra mejor solucion en busqueda local
2020-11-11 19:35:05,498 - 3760 - root - INFO - Agrega a la poblacion el mejor individuo de LS
2020-11-11 19:35:05,500 - 3760 - root - INFO - generacion 3 de 20
2020-11-11 19:44:28,009 - 3760 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 3
2020-11-11 19:47:40,491 - 3760 - root - INFO - Mejora la solucion con la busqueda local: {'layer_sizes': (42, 114, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.15085, 'fitness': 0.7822107090802515}
2020-11-11 19:47:40,491 - 3760 - root - INFO - Encuentra mejor solucion en busqueda local
2020-11-11 19:47:40,492 - 3760 - root - INFO - Agrega a la poblacion el mejor individuo de LS
2020-11-11 19:47:40,493 - 3760 - root - INFO - generacion 4 de 20
2020-11-11 19:57:15,224 - 3760 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 4
2020-11-11 20:00:07,049 - 3760 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 20:00:07,050 - 3760 - root - INFO - generacion 5 de 20
2020-11-11 20:10:07,657 - 3760 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 5
2020-11-11 20:12:58,635 - 3760 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 20:12:58,636 - 3760 - root - INFO - generacion 6 de 20
2020-11-11 20:24:42,961 - 3760 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 6
2020-11-11 20:28:14,076 - 3760 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 20:28:14,078 - 3760 - root - INFO - generacion 7 de 20
2020-11-11 20:40:20,839 - 3760 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 7
2020-11-11 20:43:49,405 - 3760 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 20:43:49,406 - 3760 - root - INFO - generacion 8 de 20
2020-11-11 20:56:54,430 - 3760 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 8
2020-11-11 21:00:20,547 - 3760 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 21:00:20,549 - 3760 - root - INFO - generacion 9 de 20
2020-11-11 21:13:16,127 - 3760 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 9
2020-11-11 21:16:48,460 - 3760 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 21:16:48,461 - 3760 - root - INFO - generacion 10 de 20
2020-11-11 21:29:59,662 - 3760 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 10
2020-11-11 21:33:31,995 - 3760 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 21:33:31,996 - 3760 - root - INFO - generacion 11 de 20
2020-11-11 21:46:27,709 - 3760 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 11
2020-11-11 21:49:53,132 - 3760 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 21:49:53,133 - 3760 - root - INFO - generacion 12 de 20
2020-11-11 22:02:01,994 - 18316 - root - INFO - Inicia busqueda exahustiva
2020-11-11 22:02:06,618 - 18316 - root - INFO - Mejora la solucion con la busqueda exahustiva: {'layer_sizes': (23, 1), 'activation': 'identity', 'alpha': 0.31792361654988777, 'learning_rate_init': 0.09460154462173086, 'fitness': 0.7733936630191068}
2020-11-11 22:02:14,791 - 18316 - root - INFO - Mejora la solucion con la busqueda exahustiva: {'layer_sizes': (23, 1, 1, 1), 'activation': 'identity', 'alpha': 0.31792361654988777, 'learning_rate_init': 0.09460154462173086, 'fitness': 0.7742011139909828}
2020-11-11 22:03:06,147 - 18316 - root - INFO - Mejora la solucion con la busqueda exahustiva: {'layer_sizes': (23, 1), 'activation': 'relu', 'alpha': 0.31792361654988777, 'learning_rate_init': 0.09460154462173086, 'fitness': 0.7755610094376393}
2020-11-11 22:03:50,198 - 3760 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 12
2020-11-11 22:07:06,805 - 3760 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 22:07:06,806 - 3760 - root - INFO - generacion 13 de 20
2020-11-11 22:14:26,615 - 18316 - root - INFO - Inicia busqueda exahustiva
2020-11-11 22:15:55,449 - 18316 - root - INFO - Mejora la solucion con la busqueda exahustiva: {'layer_sizes': (64,), 'activation': 'relu', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7802657758768613}
2020-11-11 22:21:55,200 - 3760 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 13
2020-11-11 22:25:51,716 - 3760 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 22:25:51,717 - 3760 - root - INFO - generacion 14 de 20
2020-11-11 22:26:58,903 - 18316 - root - INFO - Inicia busqueda exahustiva
2020-11-11 22:34:00,636 - 18316 - root - INFO - Inicia busqueda exahustiva
2020-11-11 22:40:02,290 - 18316 - root - INFO - Inicia busqueda exahustiva
2020-11-11 22:43:37,979 - 3760 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 14
2020-11-11 22:47:20,358 - 3760 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 22:47:20,360 - 3760 - root - INFO - generacion 15 de 20
2020-11-11 23:00:39,421 - 18316 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 4
2020-11-11 23:00:39,421 - 18316 - root - INFO - Inicia busqueda exahustiva
2020-11-11 23:04:01,425 - 3760 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 15
2020-11-11 23:06:21,956 - 17648 - root - INFO - ************************************************************
2020-11-11 23:06:21,956 - 17648 - root - INFO - INICIA ALGORITMO GENETICO
2020-11-11 23:06:21,957 - 17648 - root - INFO - ************************************************************
2020-11-11 23:06:24,502 - 13508 - root - INFO - ************************************************************
2020-11-11 23:06:24,503 - 13508 - root - INFO - INICIA ALGORITMO GENETICO
2020-11-11 23:06:24,503 - 13508 - root - INFO - ************************************************************
2020-11-11 23:16:49,582 - 17648 - root - INFO - generacion 0 de 10
2020-11-11 23:16:56,723 - 13508 - root - INFO - generacion 0 de 10
2020-11-11 23:25:54,204 - 17648 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 0
2020-11-11 23:26:03,342 - 13508 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 0
2020-11-11 23:26:03,343 - 13508 - root - INFO - Inicia busqueda exahustiva
2020-11-11 23:27:25,795 - 17648 - root - INFO - Mejora la solucion con la busqueda local: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7807811401518505}
2020-11-11 23:27:25,796 - 17648 - root - INFO - Encuentra mejor solucion en busqueda local
2020-11-11 23:27:25,797 - 17648 - root - INFO - Agrega a la poblacion el mejor individuo de LS
2020-11-11 23:27:25,797 - 17648 - root - INFO - AGREGADO:{'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7807811401518505}
2020-11-11 23:27:25,797 - 17648 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505]
2020-11-11 23:27:25,799 - 17648 - root - INFO - generacion 1 de 10
2020-11-11 23:27:33,626 - 13508 - root - INFO - Mejora la solucion con la busqueda exahustiva: {'layer_sizes': (64,), 'activation': 'relu', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7802657758768613}
2020-11-11 23:27:52,949 - 13508 - root - INFO - Encuentra mejor solucion en busqueda exahustiva
2020-11-11 23:27:52,949 - 13508 - root - INFO - Agrega a la poblacion el mejor individuo de la BH
2020-11-11 23:27:52,949 - 13508 - root - INFO - AGREGADO:{'layer_sizes': (64,), 'activation': 'relu', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7802657758768613}
2020-11-11 23:27:52,950 - 13508 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613]
2020-11-11 23:27:52,951 - 13508 - root - INFO - generacion 1 de 10
2020-11-11 23:38:12,814 - 17648 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 1
2020-11-11 23:38:27,923 - 13508 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 1
2020-11-11 23:38:27,923 - 13508 - root - INFO - Inicia busqueda exahustiva
2020-11-11 23:40:20,874 - 17648 - root - INFO - Mejora la solucion con la busqueda local: {'layer_sizes': (19, 3, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.05095, 'fitness': 0.7824869458855567}
2020-11-11 23:40:20,874 - 17648 - root - INFO - Encuentra mejor solucion en busqueda local
2020-11-11 23:40:20,875 - 17648 - root - INFO - Agrega a la poblacion el mejor individuo de LS
2020-11-11 23:40:20,875 - 17648 - root - INFO - AGREGADO:{'layer_sizes': (19, 3, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.05095, 'fitness': 0.7824869458855567}
2020-11-11 23:40:20,876 - 17648 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567]
2020-11-11 23:40:20,877 - 17648 - root - INFO - generacion 2 de 10
2020-11-11 23:40:49,122 - 13508 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413]
2020-11-11 23:40:49,124 - 13508 - root - INFO - generacion 2 de 10
2020-11-11 23:53:35,690 - 13508 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 2
2020-11-11 23:53:35,690 - 13508 - root - INFO - Inicia busqueda exahustiva
2020-11-11 23:53:51,348 - 17648 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 2
2020-11-11 23:56:22,954 - 13508 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587]
2020-11-11 23:56:22,956 - 13508 - root - INFO - generacion 3 de 10
2020-11-11 23:57:30,094 - 17648 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-11 23:57:30,094 - 17648 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567]
2020-11-11 23:57:30,095 - 17648 - root - INFO - generacion 3 de 10
2020-11-12 00:10:13,153 - 13508 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 3
2020-11-12 00:10:13,154 - 13508 - root - INFO - Inicia busqueda exahustiva
2020-11-12 00:12:11,112 - 17648 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 3
2020-11-12 00:13:02,072 - 13508 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587]
2020-11-12 00:13:02,073 - 13508 - root - INFO - generacion 4 de 10
2020-11-12 00:15:48,636 - 17648 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-12 00:15:48,637 - 17648 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567]
2020-11-12 00:15:48,638 - 17648 - root - INFO - generacion 4 de 10
2020-11-12 00:26:16,331 - 13508 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 4
2020-11-12 00:26:16,331 - 13508 - root - INFO - Inicia busqueda exahustiva
2020-11-12 00:28:59,111 - 13508 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 00:28:59,113 - 13508 - root - INFO - generacion 5 de 10
2020-11-12 00:36:15,217 - 17648 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 4
2020-11-12 00:39:49,541 - 17648 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-12 00:39:49,541 - 17648 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229]
2020-11-12 00:39:49,543 - 17648 - root - INFO - generacion 5 de 10
2020-11-12 00:41:34,719 - 13508 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 5
2020-11-12 00:41:34,719 - 13508 - root - INFO - Inicia busqueda exahustiva
2020-11-12 00:44:19,087 - 13508 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 00:44:19,088 - 13508 - root - INFO - generacion 6 de 10
2020-11-12 00:56:35,395 - 13508 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 6
2020-11-12 00:56:35,395 - 13508 - root - INFO - Inicia busqueda exahustiva
2020-11-12 00:58:23,444 - 17648 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 5
2020-11-12 00:59:05,817 - 17648 - root - INFO - Mejora la solucion con la busqueda local: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-12 00:59:05,818 - 17648 - root - INFO - Encuentra mejor solucion en busqueda local
2020-11-12 00:59:05,818 - 17648 - root - INFO - Agrega a la poblacion el mejor individuo de LS
2020-11-12 00:59:05,819 - 17648 - root - INFO - AGREGADO:{'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-12 00:59:05,819 - 17648 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865]
2020-11-12 00:59:05,820 - 17648 - root - INFO - generacion 6 de 10
2020-11-12 00:59:20,006 - 13508 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 00:59:20,008 - 13508 - root - INFO - generacion 7 de 10
2020-11-12 01:12:52,909 - 13508 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 7
2020-11-12 01:12:52,909 - 13508 - root - INFO - Inicia busqueda exahustiva
2020-11-12 01:13:49,605 - 17648 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 6
2020-11-12 01:15:36,840 - 13508 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 01:15:36,841 - 13508 - root - INFO - generacion 8 de 10
2020-11-12 01:16:36,543 - 17648 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-12 01:16:36,543 - 17648 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865]
2020-11-12 01:16:36,544 - 17648 - root - INFO - generacion 7 de 10
2020-11-12 01:29:53,022 - 17648 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 7
2020-11-12 01:32:19,476 - 13508 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 8
2020-11-12 01:32:19,477 - 13508 - root - INFO - Inicia busqueda exahustiva
2020-11-12 01:32:41,547 - 17648 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-12 01:32:41,547 - 17648 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865]
2020-11-12 01:32:41,549 - 17648 - root - INFO - generacion 8 de 10
2020-11-12 01:35:02,807 - 13508 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 01:35:02,808 - 13508 - root - INFO - generacion 9 de 10
2020-11-12 01:48:53,519 - 17648 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 8
2020-11-12 01:48:58,162 - 13508 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 9
2020-11-12 01:48:58,163 - 13508 - root - INFO - Inicia busqueda exahustiva
2020-11-12 01:51:40,700 - 17648 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-12 01:51:40,700 - 17648 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865]
2020-11-12 01:51:40,702 - 17648 - root - INFO - generacion 9 de 10
2020-11-12 01:51:41,915 - 13508 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 01:51:51,153 - 13508 - root - INFO - ************************************************************
2020-11-12 01:51:51,153 - 13508 - root - INFO - FIN ALGORITMO GENETICO: tiempo 9926.6423 mins
2020-11-12 01:51:51,153 - 13508 - root - INFO - ************************************************************
2020-11-12 01:51:51,153 - 13508 - root - INFO - La mejor solucion fue
2020-11-12 01:51:51,154 - 13508 - root - INFO - {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': '[]', 'learning_rate_init_bin': '[]'}
2020-11-12 01:59:54,671 - 17648 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 9
2020-11-12 02:01:41,403 - 17648 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-12 02:01:41,404 - 17648 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865]
2020-11-12 02:01:46,396 - 17648 - root - INFO - ************************************************************
2020-11-12 02:01:46,396 - 17648 - root - INFO - FIN ALGORITMO GENETICO: tiempo 10524.4342 mins
2020-11-12 02:01:46,396 - 17648 - root - INFO - ************************************************************
2020-11-12 02:01:46,396 - 17648 - root - INFO - La mejor solucion fue
2020-11-12 02:01:46,397 - 17648 - root - INFO - {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865, 'learning_rate_init_bin': '[]', 'alpha_bin': '[]'}
2020-11-12 08:01:21,547 - 15672 - root - INFO - ************************************************************
2020-11-12 08:01:21,547 - 15672 - root - INFO - INICIA ALGORITMO GENETICO
2020-11-12 08:01:21,547 - 15672 - root - INFO - ************************************************************
2020-11-12 08:07:47,468 - 15672 - root - INFO - generacion 0 de 10
2020-11-12 08:13:34,916 - 15672 - root - INFO - Historia: [0.780008797855261, 0.780008797855261]
2020-11-12 08:13:34,918 - 15672 - root - INFO - generacion 1 de 10
2020-11-12 08:20:04,252 - 15672 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379]
2020-11-12 08:20:04,253 - 15672 - root - INFO - generacion 2 de 10
2020-11-12 08:29:11,157 - 15672 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587]
2020-11-12 08:29:11,158 - 15672 - root - INFO - generacion 3 de 10
2020-11-12 08:37:42,764 - 15672 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587]
2020-11-12 08:37:42,765 - 15672 - root - INFO - generacion 4 de 10
2020-11-12 08:45:02,464 - 15672 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 08:45:02,465 - 15672 - root - INFO - generacion 5 de 10
2020-11-12 08:52:56,802 - 15672 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 08:52:56,803 - 15672 - root - INFO - generacion 6 de 10
2020-11-12 09:01:02,670 - 15672 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502]
2020-11-12 09:01:02,671 - 15672 - root - INFO - generacion 7 de 10
2020-11-12 09:09:35,862 - 15672 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994]
2020-11-12 09:09:35,863 - 15672 - root - INFO - generacion 8 de 10
2020-11-12 09:21:12,344 - 15672 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994]
2020-11-12 09:21:12,344 - 15672 - root - INFO - generacion 9 de 10
2020-11-12 09:33:26,782 - 15672 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994]
2020-11-12 09:34:43,492 - 15672 - root - INFO - ************************************************************
2020-11-12 09:34:43,492 - 15672 - root - INFO - FIN ALGORITMO GENETICO: tiempo 5601.9385 mins
2020-11-12 09:34:43,492 - 15672 - root - INFO - ************************************************************
2020-11-12 09:34:43,492 - 15672 - root - INFO - La mejor solucion fue
2020-11-12 09:34:43,492 - 15672 - root - INFO - {'layer_sizes': (19, 114, 62), 'activation': 'tanh', 'alpha': 0.12431262399945986, 'learning_rate_init': 0.0014638723703189985, 'fitness': 0.7846561084374994, 'alpha_bin': '[]', 'learning_rate_init_bin': '[]'}
2020-11-12 09:47:50,602 - 8252 - root - INFO - ************************************************************
2020-11-12 09:47:50,602 - 8252 - root - INFO - INICIA ALGORITMO GENETICO
2020-11-12 09:47:50,602 - 8252 - root - INFO - ************************************************************
2020-11-12 09:54:09,177 - 8252 - root - INFO - generacion 0 de 20
2020-11-12 09:59:36,518 - 8252 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 0
2020-11-12 09:59:36,518 - 8252 - root - INFO - Inicia busqueda exahustiva
2020-11-12 10:00:30,405 - 8252 - root - INFO - Mejora la solucion con la busqueda exahustiva: {'layer_sizes': (64,), 'activation': 'relu', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7802657758768613}
2020-11-12 10:00:42,809 - 8252 - root - INFO - Encuentra mejor solucion en busqueda exahustiva
2020-11-12 10:00:42,810 - 8252 - root - INFO - Agrega a la poblacion el mejor individuo de la BH
2020-11-12 10:00:42,810 - 8252 - root - INFO - AGREGADO:{'layer_sizes': (64,), 'activation': 'relu', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7802657758768613}
2020-11-12 10:00:42,810 - 8252 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613]
2020-11-12 10:00:42,811 - 8252 - root - INFO - generacion 1 de 20
2020-11-12 10:07:10,690 - 8252 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 1
2020-11-12 10:07:10,690 - 8252 - root - INFO - Inicia busqueda exahustiva
2020-11-12 10:08:38,448 - 8252 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413]
2020-11-12 10:08:38,450 - 8252 - root - INFO - generacion 2 de 20
2020-11-12 10:16:24,438 - 8252 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 2
2020-11-12 10:16:24,438 - 8252 - root - INFO - Inicia busqueda exahustiva
2020-11-12 10:18:08,071 - 8252 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587]
2020-11-12 10:18:08,072 - 8252 - root - INFO - generacion 3 de 20
2020-11-12 10:26:38,098 - 8252 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 10:26:38,098 - 8252 - root - INFO - ANTES: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-11-12 10:26:38,099 - 8252 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-12 10:26:38,099 - 8252 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587]
2020-11-12 10:26:38,099 - 8252 - root - INFO - generacion 4 de 20
2020-11-12 10:34:49,680 - 8252 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 10:34:49,680 - 8252 - root - INFO - ANTES: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-11-12 10:34:49,681 - 8252 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-12 10:34:49,681 - 8252 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 10:34:49,682 - 8252 - root - INFO - generacion 5 de 20
2020-11-12 10:42:46,028 - 8252 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 10:42:46,028 - 8252 - root - INFO - ANTES: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-11-12 10:42:46,028 - 8252 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-12 10:42:46,028 - 8252 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 10:42:46,029 - 8252 - root - INFO - generacion 6 de 20
2020-11-12 10:50:22,958 - 8252 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 10:50:22,958 - 8252 - root - INFO - ANTES: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-11-12 10:50:22,958 - 8252 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-12 10:50:22,958 - 8252 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 10:50:22,960 - 8252 - root - INFO - generacion 7 de 20
2020-11-12 10:58:48,865 - 8252 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 10:58:48,865 - 8252 - root - INFO - ANTES: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-11-12 10:58:48,865 - 8252 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-12 10:58:48,866 - 8252 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 10:58:48,866 - 8252 - root - INFO - generacion 8 de 20
2020-11-12 11:09:02,775 - 8252 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 11:09:02,775 - 8252 - root - INFO - ANTES: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-11-12 11:09:02,775 - 8252 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-12 11:09:02,775 - 8252 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 11:09:02,777 - 8252 - root - INFO - generacion 9 de 20
2020-11-12 11:17:44,529 - 8252 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 11:17:44,529 - 8252 - root - INFO - ANTES: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-11-12 11:17:44,529 - 8252 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-12 11:17:44,529 - 8252 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 11:17:44,530 - 8252 - root - INFO - generacion 10 de 20
2020-11-12 11:25:49,917 - 8252 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 11:25:49,918 - 8252 - root - INFO - ANTES: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-11-12 11:25:49,918 - 8252 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-12 11:25:49,918 - 8252 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 11:25:49,919 - 8252 - root - INFO - generacion 11 de 20
2020-11-12 11:36:09,542 - 8252 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 11:36:09,542 - 8252 - root - INFO - ANTES: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-11-12 11:36:09,542 - 8252 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-12 11:36:09,542 - 8252 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 11:36:09,543 - 8252 - root - INFO - generacion 12 de 20
2020-11-12 11:46:58,126 - 8252 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 11:46:58,126 - 8252 - root - INFO - ANTES: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-11-12 11:46:58,126 - 8252 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-12 11:46:58,127 - 8252 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 11:46:58,127 - 8252 - root - INFO - generacion 13 de 20
2020-11-12 11:57:31,697 - 8252 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 11:57:31,697 - 8252 - root - INFO - ANTES: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-11-12 11:57:31,697 - 8252 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-12 11:57:31,697 - 8252 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 11:57:31,698 - 8252 - root - INFO - generacion 14 de 20
2020-11-12 12:07:41,404 - 8252 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 12:07:41,404 - 8252 - root - INFO - ANTES: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-11-12 12:07:41,404 - 8252 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-12 12:07:41,404 - 8252 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 12:07:41,405 - 8252 - root - INFO - generacion 15 de 20
2020-11-12 12:20:14,799 - 8252 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 12:20:14,799 - 8252 - root - INFO - ANTES: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-11-12 12:20:14,799 - 8252 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-12 12:20:14,799 - 8252 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 12:20:14,800 - 8252 - root - INFO - generacion 16 de 20
2020-11-12 12:28:11,229 - 8252 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 12:28:11,229 - 8252 - root - INFO - ANTES: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-11-12 12:28:11,229 - 8252 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-12 12:28:11,230 - 8252 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 12:28:11,230 - 8252 - root - INFO - generacion 17 de 20
2020-11-12 12:36:36,668 - 8252 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 12:36:36,668 - 8252 - root - INFO - ANTES: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-11-12 12:36:36,668 - 8252 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-12 12:36:36,668 - 8252 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 12:36:36,669 - 8252 - root - INFO - generacion 18 de 20
2020-11-12 12:46:22,299 - 8252 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 12:46:22,299 - 8252 - root - INFO - ANTES: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-11-12 12:46:22,299 - 8252 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-12 12:46:22,299 - 8252 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 12:46:22,300 - 8252 - root - INFO - generacion 19 de 20
2020-11-12 12:56:34,532 - 8252 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 12:56:34,532 - 8252 - root - INFO - ANTES: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-11-12 12:56:34,532 - 8252 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-12 12:56:34,533 - 8252 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 12:56:40,440 - 8252 - root - INFO - ************************************************************
2020-11-12 12:56:40,440 - 8252 - root - INFO - FIN ALGORITMO GENETICO: tiempo 11329.7797 mins
2020-11-12 12:56:40,440 - 8252 - root - INFO - ************************************************************
2020-11-12 12:56:40,440 - 8252 - root - INFO - La mejor solucion fue
2020-11-12 12:56:40,441 - 8252 - root - INFO - {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': '[]', 'learning_rate_init_bin': '[]'}
2020-11-12 15:36:50,503 - 20468 - root - INFO - ************************************************************
2020-11-12 15:36:50,503 - 20468 - root - INFO - INICIA ALGORITMO GENETICO
2020-11-12 15:36:50,503 - 20468 - root - INFO - ************************************************************
2020-11-12 15:43:09,649 - 20468 - root - INFO - generacion 0 de 20
2020-11-12 15:48:36,670 - 20468 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 0
2020-11-12 15:49:30,106 - 20468 - root - INFO - Mejora la solucion con la busqueda local: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7807811401518505}
2020-11-12 15:49:30,107 - 20468 - root - INFO - Encuentra mejor solucion en busqueda local
2020-11-12 15:49:30,107 - 20468 - root - INFO - Agrega a la poblacion el mejor individuo de LS
2020-11-12 15:49:30,107 - 20468 - root - INFO - AGREGADO:{'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7807811401518505}
2020-11-12 15:49:30,107 - 20468 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505]
2020-11-12 15:49:30,108 - 20468 - root - INFO - generacion 1 de 20
2020-11-12 15:56:04,141 - 20468 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 1
2020-11-12 15:57:23,725 - 20468 - root - INFO - Mejora la solucion con la busqueda local: {'layer_sizes': (19, 3, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.05095, 'fitness': 0.7824869458855567}
2020-11-12 15:57:23,725 - 20468 - root - INFO - Encuentra mejor solucion en busqueda local
2020-11-12 15:57:23,725 - 20468 - root - INFO - Agrega a la poblacion el mejor individuo de LS
2020-11-12 15:57:23,725 - 20468 - root - INFO - AGREGADO:{'layer_sizes': (19, 3, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.05095, 'fitness': 0.7824869458855567}
2020-11-12 15:57:23,726 - 20468 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567]
2020-11-12 15:57:23,727 - 20468 - root - INFO - generacion 2 de 20
2020-11-12 16:05:28,023 - 20468 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 2
2020-11-12 16:07:42,373 - 20468 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-12 16:07:42,373 - 20468 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567]
2020-11-12 16:07:42,374 - 20468 - root - INFO - generacion 3 de 20
2020-11-12 16:16:28,750 - 20468 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 16:16:28,750 - 20468 - root - INFO - ANTES: {'layer_sizes': (19, 3, 118), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7819951524971291}
2020-11-12 16:16:28,750 - 20468 - root - INFO - AHORA: {'layer_sizes': (19, 3, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.05095, 'fitness': 0.7824869458855567}
2020-11-12 16:16:28,750 - 20468 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567]
2020-11-12 16:16:28,751 - 20468 - root - INFO - generacion 4 de 20
2020-11-12 16:28:51,175 - 20468 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 4
2020-11-12 16:31:03,124 - 20468 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-12 16:31:03,124 - 20468 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229]
2020-11-12 16:31:03,125 - 20468 - root - INFO - generacion 5 de 20
2020-11-12 16:42:35,455 - 20468 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 5
2020-11-12 16:43:02,800 - 20468 - root - INFO - Mejora la solucion con la busqueda local: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-12 16:43:02,800 - 20468 - root - INFO - Encuentra mejor solucion en busqueda local
2020-11-12 16:43:02,801 - 20468 - root - INFO - Agrega a la poblacion el mejor individuo de LS
2020-11-12 16:43:02,801 - 20468 - root - INFO - AGREGADO:{'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-12 16:43:02,801 - 20468 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865]
2020-11-12 16:43:02,802 - 20468 - root - INFO - generacion 6 de 20
2020-11-12 16:52:14,045 - 20468 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 6
2020-11-12 16:54:00,186 - 20468 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-12 16:54:00,186 - 20468 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865]
2020-11-12 16:54:00,187 - 20468 - root - INFO - generacion 7 de 20
2020-11-12 17:02:21,384 - 20468 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 17:02:21,384 - 20468 - root - INFO - ANTES: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.008550540368382903, 'learning_rate_init': 0.001, 'fitness': 0.7831754643989097}
2020-11-12 17:02:21,384 - 20468 - root - INFO - AHORA: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-12 17:02:21,384 - 20468 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865]
2020-11-12 17:02:21,385 - 20468 - root - INFO - generacion 8 de 20
2020-11-12 17:12:26,206 - 20468 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 17:12:26,206 - 20468 - root - INFO - ANTES: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.008550540368382903, 'learning_rate_init': 0.001, 'fitness': 0.7831754643989097}
2020-11-12 17:12:26,206 - 20468 - root - INFO - AHORA: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-12 17:12:26,206 - 20468 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865]
2020-11-12 17:12:26,208 - 20468 - root - INFO - generacion 9 de 20
2020-11-12 17:20:33,210 - 20468 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 17:20:33,210 - 20468 - root - INFO - ANTES: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.008550540368382903, 'learning_rate_init': 0.001, 'fitness': 0.7831754643989097}
2020-11-12 17:20:33,210 - 20468 - root - INFO - AHORA: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-12 17:20:33,210 - 20468 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865]
2020-11-12 17:20:33,211 - 20468 - root - INFO - generacion 10 de 20
2020-11-12 17:26:29,111 - 20468 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 17:26:29,111 - 20468 - root - INFO - ANTES: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.008550540368382903, 'learning_rate_init': 0.001, 'fitness': 0.7831754643989097}
2020-11-12 17:26:29,112 - 20468 - root - INFO - AHORA: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-12 17:26:29,112 - 20468 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865]
2020-11-12 17:26:29,112 - 20468 - root - INFO - generacion 11 de 20
2020-11-12 17:30:54,990 - 20468 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 17:30:54,990 - 20468 - root - INFO - ANTES: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.008550540368382903, 'learning_rate_init': 0.001, 'fitness': 0.7831754643989097}
2020-11-12 17:30:54,990 - 20468 - root - INFO - AHORA: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-12 17:30:54,990 - 20468 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865]
2020-11-12 17:30:54,991 - 20468 - root - INFO - generacion 12 de 20
2020-11-12 17:39:14,062 - 20468 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 12
2020-11-12 17:41:00,573 - 20468 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-12 17:41:00,573 - 20468 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832070185029226]
2020-11-12 17:41:00,574 - 20468 - root - INFO - generacion 13 de 20
2020-11-12 17:48:07,707 - 20468 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 13
2020-11-12 17:49:54,514 - 20468 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-12 17:49:54,515 - 20468 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832070185029226, 0.7832074264045441]
2020-11-12 17:49:54,516 - 20468 - root - INFO - generacion 14 de 20
2020-11-12 17:57:53,656 - 20468 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 17:57:53,656 - 20468 - root - INFO - ANTES: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.008550540368382903, 'learning_rate_init': 0.001, 'fitness': 0.7831754643989097}
2020-11-12 17:57:53,656 - 20468 - root - INFO - AHORA: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001634218053826597, 'learning_rate_init': 0.0010554300392555654, 'fitness': 0.7832074264045441}
2020-11-12 17:57:53,656 - 20468 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832070185029226, 0.7832074264045441, 0.7832074264045441]
2020-11-12 17:57:53,657 - 20468 - root - INFO - generacion 15 de 20
2020-11-12 18:13:40,008 - 20468 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 18:13:40,009 - 20468 - root - INFO - ANTES: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.008550540368382903, 'learning_rate_init': 0.001, 'fitness': 0.7831754643989097}
2020-11-12 18:13:40,009 - 20468 - root - INFO - AHORA: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001634218053826597, 'learning_rate_init': 0.0010554300392555654, 'fitness': 0.7832074264045441}
2020-11-12 18:13:40,009 - 20468 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832070185029226, 0.7832074264045441, 0.7832074264045441, 0.7832074264045441]
2020-11-12 18:13:40,010 - 20468 - root - INFO - generacion 16 de 20
2020-11-12 18:25:00,911 - 20468 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 16
2020-11-12 18:32:04,688 - 20468 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-12 18:32:04,689 - 20468 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832070185029226, 0.7832074264045441, 0.7832074264045441, 0.7832074264045441, 0.7832074943881477]
2020-11-12 18:32:04,689 - 20468 - root - INFO - generacion 17 de 20
2020-11-12 18:42:49,023 - 20468 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 18:42:49,023 - 20468 - root - INFO - ANTES: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.008550540368382903, 'learning_rate_init': 0.001, 'fitness': 0.7831754643989097}
2020-11-12 18:42:49,023 - 20468 - root - INFO - AHORA: {'layer_sizes': (42, 62), 'activation': 'relu', 'alpha': 0.00018350867149338103, 'learning_rate_init': 0.0010554300392555654, 'fitness': 0.7832074943881477}
2020-11-12 18:42:49,023 - 20468 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832070185029226, 0.7832074264045441, 0.7832074264045441, 0.7832074264045441, 0.7832074943881477, 0.7832074943881477]
2020-11-12 18:42:49,024 - 20468 - root - INFO - generacion 18 de 20
2020-11-12 18:50:21,001 - 20468 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 18:50:21,001 - 20468 - root - INFO - ANTES: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.008550540368382903, 'learning_rate_init': 0.001, 'fitness': 0.7831754643989097}
2020-11-12 18:50:21,001 - 20468 - root - INFO - AHORA: {'layer_sizes': (42, 62), 'activation': 'relu', 'alpha': 0.00018350867149338103, 'learning_rate_init': 0.0010554300392555654, 'fitness': 0.7832074943881477}
2020-11-12 18:50:21,001 - 20468 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832070185029226, 0.7832074264045441, 0.7832074264045441, 0.7832074264045441, 0.7832074943881477, 0.7832074943881477, 0.7832074943881477]
2020-11-12 18:50:21,003 - 20468 - root - INFO - generacion 19 de 20
2020-11-12 19:03:38,130 - 20468 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-12 19:03:38,130 - 20468 - root - INFO - ANTES: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.008550540368382903, 'learning_rate_init': 0.001, 'fitness': 0.7831754643989097}
2020-11-12 19:03:38,130 - 20468 - root - INFO - AHORA: {'layer_sizes': (42, 62), 'activation': 'relu', 'alpha': 0.00018350867149338103, 'learning_rate_init': 0.0010554300392555654, 'fitness': 0.7832074943881477}
2020-11-12 19:03:38,130 - 20468 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832070185029226, 0.7832074264045441, 0.7832074264045441, 0.7832074264045441, 0.7832074943881477, 0.7832074943881477, 0.7832074943881477, 0.7832074943881477]
2020-11-12 19:04:46,918 - 20468 - root - INFO - ************************************************************
2020-11-12 19:04:46,918 - 20468 - root - INFO - FIN ALGORITMO GENETICO: tiempo 12476.4081 mins
2020-11-12 19:04:46,918 - 20468 - root - INFO - ************************************************************
2020-11-12 19:04:46,919 - 20468 - root - INFO - La mejor solucion fue
2020-11-12 19:04:46,919 - 20468 - root - INFO - {'layer_sizes': (42, 62), 'activation': 'relu', 'alpha': 0.00018350867149338103, 'learning_rate_init': 0.0010554300392555654, 'fitness': 0.7832074943881477, 'learning_rate_init_bin': '[]', 'alpha_bin': '[]'}
2020-11-12 20:23:23,217 - 15924 - root - INFO - ************************************************************
2020-11-12 20:23:23,217 - 15924 - root - INFO - INICIA ALGORITMO GENETICO
2020-11-12 20:23:23,217 - 15924 - root - INFO - ************************************************************
2020-11-12 20:24:57,908 - 13232 - root - INFO - ************************************************************
2020-11-12 20:24:57,908 - 13232 - root - INFO - INICIA ALGORITMO GENETICO
2020-11-12 20:24:57,908 - 13232 - root - INFO - ************************************************************
2020-11-12 20:31:57,609 - 15924 - root - INFO - generacion 0 de 20
2020-11-12 20:34:38,337 - 13232 - root - INFO - generacion 0 de 20
2020-11-12 20:40:15,035 - 15924 - root - INFO - Historia: [0.780008797855261, 0.780008797855261]
2020-11-12 20:40:15,036 - 15924 - root - INFO - generacion 1 de 20
2020-11-12 20:42:54,446 - 13232 - root - INFO - Historia: [0.780008797855261, 0.780008797855261]
2020-11-12 20:42:54,448 - 13232 - root - INFO - generacion 1 de 20
2020-11-12 20:49:57,774 - 15924 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379]
2020-11-12 20:49:57,776 - 15924 - root - INFO - generacion 2 de 20
2020-11-12 20:52:46,176 - 13232 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379]
2020-11-12 20:52:46,177 - 13232 - root - INFO - generacion 2 de 20
2020-11-12 21:03:58,631 - 15924 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587]
2020-11-12 21:03:58,633 - 15924 - root - INFO - generacion 3 de 20
2020-11-12 21:06:54,790 - 13232 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587]
2020-11-12 21:06:54,792 - 13232 - root - INFO - generacion 3 de 20
2020-11-12 21:17:02,610 - 15924 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587]
2020-11-12 21:17:02,611 - 15924 - root - INFO - generacion 4 de 20
2020-11-12 21:19:58,981 - 13232 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587]
2020-11-12 21:19:58,983 - 13232 - root - INFO - generacion 4 de 20
2020-11-12 21:28:37,003 - 15924 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 21:28:37,004 - 15924 - root - INFO - generacion 5 de 20
2020-11-12 21:31:30,785 - 13232 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 21:31:30,787 - 13232 - root - INFO - generacion 5 de 20
2020-11-12 21:40:27,067 - 15924 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 21:40:27,068 - 15924 - root - INFO - generacion 6 de 20
2020-11-12 21:43:21,403 - 13232 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-12 21:43:21,405 - 13232 - root - INFO - generacion 6 de 20
2020-11-12 21:52:45,832 - 15924 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502]
2020-11-12 21:52:45,833 - 15924 - root - INFO - generacion 7 de 20
2020-11-12 21:55:39,636 - 13232 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502]
2020-11-12 21:55:39,638 - 13232 - root - INFO - generacion 7 de 20
2020-11-12 22:05:39,769 - 15924 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994]
2020-11-12 22:05:39,770 - 15924 - root - INFO - generacion 8 de 20
2020-11-12 22:08:25,489 - 13232 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994]
2020-11-12 22:08:25,490 - 13232 - root - INFO - generacion 8 de 20
2020-11-12 22:22:49,454 - 15924 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994]
2020-11-12 22:22:49,455 - 15924 - root - INFO - generacion 9 de 20
2020-11-12 22:25:37,132 - 13232 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994]
2020-11-12 22:25:37,133 - 13232 - root - INFO - generacion 9 de 20
2020-11-12 22:40:58,812 - 15924 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994]
2020-11-12 22:40:58,813 - 15924 - root - INFO - generacion 10 de 20
2020-11-12 22:43:59,975 - 13232 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994]
2020-11-12 22:43:59,977 - 13232 - root - INFO - generacion 10 de 20
2020-11-12 23:05:35,263 - 15924 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994]
2020-11-12 23:05:35,265 - 15924 - root - INFO - generacion 11 de 20
2020-11-12 23:08:25,913 - 13232 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994]
2020-11-12 23:08:25,914 - 13232 - root - INFO - generacion 11 de 20
2020-11-12 23:28:06,842 - 15924 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7851215436116176]
2020-11-12 23:28:06,843 - 15924 - root - INFO - generacion 12 de 20
2020-11-12 23:30:57,046 - 13232 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7851215436116176]
2020-11-12 23:30:57,047 - 13232 - root - INFO - generacion 12 de 20
2020-11-12 23:50:57,533 - 15924 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7851215436116176, 0.7851215436116176]
2020-11-12 23:50:57,534 - 15924 - root - INFO - generacion 13 de 20
2020-11-12 23:53:47,910 - 13232 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7851215436116176, 0.7851215436116176]
2020-11-12 23:53:47,911 - 13232 - root - INFO - generacion 13 de 20
2020-11-13 00:14:01,161 - 15924 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176]
2020-11-13 00:14:01,162 - 15924 - root - INFO - generacion 14 de 20
2020-11-13 00:16:52,918 - 13232 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176]
2020-11-13 00:16:52,918 - 13232 - root - INFO - generacion 14 de 20
2020-11-13 00:34:39,655 - 15924 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176]
2020-11-13 00:34:39,656 - 15924 - root - INFO - generacion 15 de 20
2020-11-13 00:37:32,106 - 13232 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176]
2020-11-13 00:37:32,108 - 13232 - root - INFO - generacion 15 de 20
2020-11-13 00:56:44,318 - 15924 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7852189738275169]
2020-11-13 00:56:44,319 - 15924 - root - INFO - generacion 16 de 20
2020-11-13 00:59:37,533 - 13232 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7852189738275169]
2020-11-13 00:59:37,534 - 13232 - root - INFO - generacion 16 de 20
2020-11-13 01:20:57,101 - 15924 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7852189738275169, 0.7852189738275169]
2020-11-13 01:20:57,102 - 15924 - root - INFO - generacion 17 de 20
2020-11-13 01:23:52,621 - 13232 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7852189738275169, 0.7852189738275169]
2020-11-13 01:23:52,622 - 13232 - root - INFO - generacion 17 de 20
2020-11-13 01:44:24,614 - 15924 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7852189738275169, 0.7852189738275169, 0.7852189738275169]
2020-11-13 01:44:24,615 - 15924 - root - INFO - generacion 18 de 20
2020-11-13 01:47:20,991 - 13232 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7852189738275169, 0.7852189738275169, 0.7852189738275169]
2020-11-13 01:47:20,992 - 13232 - root - INFO - generacion 18 de 20
2020-11-13 02:09:57,848 - 15924 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7852189738275169, 0.7852189738275169, 0.7852189738275169, 0.7852189738275169]
2020-11-13 02:09:57,853 - 15924 - root - INFO - generacion 19 de 20
2020-11-13 02:12:52,807 - 13232 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7852189738275169, 0.7852189738275169, 0.7852189738275169, 0.7852189738275169]
2020-11-13 02:12:52,808 - 13232 - root - INFO - generacion 19 de 20
2020-11-13 02:33:53,590 - 15924 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7852189738275169, 0.7852189738275169, 0.7852189738275169, 0.7852189738275169, 0.785376326734016]
2020-11-13 02:34:21,422 - 15924 - root - INFO - ************************************************************
2020-11-13 02:34:21,422 - 15924 - root - INFO - FIN ALGORITMO GENETICO: tiempo 22258.1975 mins
2020-11-13 02:34:21,422 - 15924 - root - INFO - ************************************************************
2020-11-13 02:34:21,422 - 15924 - root - INFO - La mejor solucion fue
2020-11-13 02:34:21,423 - 15924 - root - INFO - {'layer_sizes': (19, 114, 62), 'activation': 'tanh', 'alpha': 1.3422882364300124, 'learning_rate_init': 0.001, 'fitness': 0.785376326734016, 'learning_rate_init_bin': '[]', 'alpha_bin': '[]'}
2020-11-13 02:35:51,601 - 13232 - root - INFO - Historia: [0.780008797855261, 0.780008797855261, 0.7806545741058379, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7844370749786502, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7846561084374994, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7851215436116176, 0.7852189738275169, 0.7852189738275169, 0.7852189738275169, 0.7852189738275169, 0.785376326734016]
2020-11-13 02:36:08,726 - 13232 - root - INFO - ************************************************************
2020-11-13 02:36:08,727 - 13232 - root - INFO - FIN ALGORITMO GENETICO: tiempo 22270.8107 mins
2020-11-13 02:36:08,727 - 13232 - root - INFO - ************************************************************
2020-11-13 02:36:08,727 - 13232 - root - INFO - La mejor solucion fue
2020-11-13 02:36:08,727 - 13232 - root - INFO - {'layer_sizes': (19, 114, 62), 'activation': 'tanh', 'alpha': 1.3422882364300124, 'learning_rate_init': 0.001, 'fitness': 0.785376326734016, 'learning_rate_init_bin': '[]', 'alpha_bin': '[]'}
2020-11-13 14:03:52,959 - 15924 - root - INFO - ************************************************************
2020-11-13 14:03:52,961 - 15924 - root - INFO - INICIA ALGORITMO GENETICO
2020-11-13 14:03:52,961 - 15924 - root - INFO - ************************************************************
2020-11-13 14:22:56,153 - 15924 - root - INFO - generacion 0 de 20
2020-11-13 14:37:02,199 - 13232 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2020-11-13 14:37:02,200 - 13232 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2020-11-13 14:37:04,028 - 13232 - matplotlib.pyplot - DEBUG - Loaded backend qt5agg version unknown.
2020-11-13 14:37:04,029 - 13232 - matplotlib.pyplot - DEBUG - Loaded backend Qt5Agg version unknown.
2020-11-13 14:37:05,132 - 13232 - matplotlib.font_manager - DEBUG - findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-11-13 14:37:05,132 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,133 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,133 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,134 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-11-13 14:37:05,134 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-11-13 14:37:05,134 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-11-13 14:37:05,135 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,135 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,136 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,136 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-11-13 14:37:05,137 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-11-13 14:37:05,137 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,137 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,138 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,138 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,138 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,138 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,139 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,139 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,140 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,140 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,141 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,141 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,141 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-11-13 14:37:05,141 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-11-13 14:37:05,142 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,142 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,142 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-11-13 14:37:05,143 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,143 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,143 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-11-13 14:37:05,144 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,144 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-11-13 14:37:05,144 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,144 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,144 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-11-13 14:37:05,145 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-11-13 14:37:05,145 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-11-13 14:37:05,145 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,146 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,146 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,146 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,146 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,147 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,147 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,147 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,148 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-11-13 14:37:05,148 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
2020-11-13 14:37:05,148 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal regular normal>) = 10.05
2020-11-13 14:37:05,148 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 7.8986363636363635
2020-11-13 14:37:05,149 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,149 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,149 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,150 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,150 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,150 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,150 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,151 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,151 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal demi normal>) = 10.24
2020-11-13 14:37:05,151 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal demibold normal>) = 11.24
2020-11-13 14:37:05,151 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,152 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,152 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2020-11-13 14:37:05,153 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,153 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,154 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-11-13 14:37:05,154 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,154 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,154 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal demibold normal>) = 10.24
2020-11-13 14:37:05,154 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,155 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2020-11-13 14:37:05,155 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal demi condensed>) = 10.44
2020-11-13 14:37:05,155 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,156 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,156 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
2020-11-13 14:37:05,156 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,157 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,158 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2020-11-13 14:37:05,158 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,158 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,159 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,159 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-11-13 14:37:05,159 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,160 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,160 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,161 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,162 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,162 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,162 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,162 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,162 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,163 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-11-13 14:37:05,163 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-11-13 14:37:05,164 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,164 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,164 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-11-13 14:37:05,165 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,165 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,166 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2020-11-13 14:37:05,166 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2020-11-13 14:37:05,166 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,166 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,167 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,167 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2020-11-13 14:37:05,167 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,167 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,168 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,168 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,168 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2020-11-13 14:37:05,168 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,169 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal light normal>) = 10.24
2020-11-13 14:37:05,169 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,169 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-11-13 14:37:05,169 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,170 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-11-13 14:37:05,170 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,170 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,170 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,171 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,171 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-11-13 14:37:05,171 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,171 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,171 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-11-13 14:37:05,172 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,172 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,173 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2020-11-13 14:37:05,173 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,174 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,174 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal light normal>) = 10.24
2020-11-13 14:37:05,174 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2020-11-13 14:37:05,175 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,175 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,176 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,176 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-11-13 14:37:05,176 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,177 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,177 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,177 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,178 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,178 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,178 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,179 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal book normal>) = 11.05
2020-11-13 14:37:05,180 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,180 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal heavy normal>) = 10.43
2020-11-13 14:37:05,180 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,180 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,181 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,182 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal medium condensed>) = 10.344999999999999
2020-11-13 14:37:05,182 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,182 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,182 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,182 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,183 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,183 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,184 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal bold condensed>) = 10.535
2020-11-13 14:37:05,184 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,184 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,184 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,185 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,185 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,186 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,186 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,186 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,187 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,187 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal bold condensed>) = 10.535
2020-11-13 14:37:05,187 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,188 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,188 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,188 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal book normal>) = 11.05
2020-11-13 14:37:05,189 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,189 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-11-13 14:37:05,190 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,190 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2020-11-13 14:37:05,191 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,192 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,192 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,192 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,192 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal demi normal>) = 10.24
2020-11-13 14:37:05,193 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-11-13 14:37:05,193 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,193 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-11-13 14:37:05,194 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,194 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,195 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal black normal>) = 10.525
2020-11-13 14:37:05,195 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,195 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,196 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,196 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal regular normal>) = 10.05
2020-11-13 14:37:05,196 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,197 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,197 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-11-13 14:37:05,198 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,198 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,198 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,199 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,199 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,199 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,200 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,200 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,201 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-11-13 14:37:05,201 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal demi normal>) = 10.24
2020-11-13 14:37:05,201 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,202 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,202 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,202 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,203 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal light normal>) = 10.24
2020-11-13 14:37:05,203 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,204 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,204 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2020-11-13 14:37:05,205 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,205 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
2020-11-13 14:37:05,205 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,206 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,206 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,206 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,207 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,207 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal black normal>) = 10.525
2020-11-13 14:37:05,207 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal bold condensed>) = 10.535
2020-11-13 14:37:05,208 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-11-13 14:37:05,208 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,208 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2020-11-13 14:37:05,208 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-11-13 14:37:05,209 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,209 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,209 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,209 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,210 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-11-13 14:37:05,210 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,210 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,210 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,211 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2020-11-13 14:37:05,211 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,211 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal book normal>) = 10.05
2020-11-13 14:37:05,211 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-11-13 14:37:05,212 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,212 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal black normal>) = 10.525
2020-11-13 14:37:05,212 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,213 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,213 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,213 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal heavy normal>) = 11.43
2020-11-13 14:37:05,214 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,214 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,214 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-11-13 14:37:05,214 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,215 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal bold condensed>) = 10.535
2020-11-13 14:37:05,215 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,215 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-11-13 14:37:05,216 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,216 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,216 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,216 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,217 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,217 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,217 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,217 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal demi normal>) = 11.24
2020-11-13 14:37:05,217 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,218 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,218 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-11-13 14:37:05,218 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal black normal>) = 11.525
2020-11-13 14:37:05,218 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-11-13 14:37:05,219 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,219 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2020-11-13 14:37:05,219 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,219 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,220 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal bold normal>) = 11.335
2020-11-13 14:37:05,220 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,220 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,220 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-11-13 14:37:05,220 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,221 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,221 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,221 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal light normal>) = 10.24
2020-11-13 14:37:05,221 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-11-13 14:37:05,222 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,222 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,222 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal demibold normal>) = 10.24
2020-11-13 14:37:05,223 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,223 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,223 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-11-13 14:37:05,223 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,224 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,224 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-11-13 14:37:05,224 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,224 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-11-13 14:37:05,224 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-11-13 14:37:05,224 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal bold condensed>) = 10.535
2020-11-13 14:37:05,225 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,225 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,225 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,226 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,227 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal roman normal>) = 10.145
2020-11-13 14:37:05,227 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,227 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2020-11-13 14:37:05,228 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,228 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal book normal>) = 11.05
2020-11-13 14:37:05,228 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,229 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,229 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,229 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,230 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,230 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,230 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,230 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,230 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,230 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,231 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,231 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,232 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,232 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,232 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,233 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,233 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal medium normal>) = 10.145
2020-11-13 14:37:05,233 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,234 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,234 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal bold condensed>) = 10.535
2020-11-13 14:37:05,234 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,235 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,235 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,235 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,235 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
2020-11-13 14:37:05,236 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,236 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,236 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,236 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,237 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-11-13 14:37:05,237 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,237 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,237 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,238 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal demibold normal>) = 11.24
2020-11-13 14:37:05,238 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,238 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,239 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,239 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,239 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,239 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal book normal>) = 10.05
2020-11-13 14:37:05,239 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-11-13 14:37:05,239 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,240 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,240 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,241 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,242 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 6.8986363636363635
2020-11-13 14:37:05,242 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,242 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal regular normal>) = 10.05
2020-11-13 14:37:05,242 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,242 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,243 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,243 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,243 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-11-13 14:37:05,243 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,244 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
2020-11-13 14:37:05,244 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2020-11-13 14:37:05,245 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal roman normal>) = 10.145
2020-11-13 14:37:05,245 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,245 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,245 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-11-13 14:37:05,245 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-11-13 14:37:05,245 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-11-13 14:37:05,246 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,246 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-11-13 14:37:05,246 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,246 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,246 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,247 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,247 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,247 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,247 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal bold normal>) = 10.335
2020-11-13 14:37:05,248 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal bold condensed>) = 11.535
2020-11-13 14:37:05,248 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-11-13 14:37:05,248 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,248 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,249 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-11-13 14:37:05,249 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,249 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-11-13 14:37:05,249 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-11-13 14:37:05,249 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-11-13 14:37:05,250 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal demibold normal>) = 11.24
2020-11-13 14:37:05,250 - 13232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal book normal>) = 10.05
2020-11-13 14:37:05,250 - 13232 - matplotlib.font_manager - DEBUG - findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\pasal\\Anaconda3\\envs\\ciencia-datos\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2020-11-13 14:53:12,259 - 15924 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 0
2020-11-13 14:53:12,259 - 15924 - root - INFO - Entra a bin cont
2020-11-13 14:55:42,736 - 15924 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-13 14:55:42,736 - 15924 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287]
2020-11-13 14:55:42,738 - 15924 - root - INFO - generacion 1 de 20
2020-11-13 15:09:56,041 - 15924 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-13 22:13:53,556 - 24596 - root - INFO - ************************************************************
2020-11-13 22:13:53,557 - 24596 - root - INFO - INICIA ALGORITMO GENETICO
2020-11-13 22:13:53,557 - 24596 - root - INFO - ************************************************************
2020-11-13 22:16:57,881 - 22152 - root - INFO - ************************************************************
2020-11-13 22:16:57,881 - 22152 - root - INFO - INICIA ALGORITMO GENETICO
2020-11-13 22:16:57,881 - 22152 - root - INFO - ************************************************************
2020-11-13 22:17:36,115 - 1776 - root - INFO - ************************************************************
2020-11-13 22:17:36,116 - 1776 - root - INFO - INICIA ALGORITMO GENETICO
2020-11-13 22:17:36,116 - 1776 - root - INFO - ************************************************************
2020-11-13 22:18:04,339 - 21132 - root - INFO - ************************************************************
2020-11-13 22:18:04,340 - 21132 - root - INFO - INICIA ALGORITMO GENETICO
2020-11-13 22:18:04,340 - 21132 - root - INFO - ************************************************************
2020-11-13 22:18:42,730 - 13112 - root - INFO - ************************************************************
2020-11-13 22:18:42,730 - 13112 - root - INFO - INICIA ALGORITMO GENETICO
2020-11-13 22:18:42,730 - 13112 - root - INFO - ************************************************************
2020-11-13 22:27:22,561 - 1776 - root - INFO - generacion 0 de 20
2020-11-13 22:27:57,724 - 21132 - root - INFO - generacion 0 de 20
2020-11-13 22:28:24,569 - 22152 - root - INFO - generacion 0 de 20
2020-11-13 22:30:58,337 - 13112 - root - INFO - generacion 0 de 20
2020-11-13 22:40:13,332 - 22152 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 0
2020-11-13 22:40:13,332 - 22152 - root - INFO - Inicia busqueda exahustiva
2020-11-13 22:41:59,788 - 22152 - root - INFO - Mejora la solucion con la busqueda exahustiva: {'layer_sizes': (64,), 'activation': 'relu', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7802657758768613}
2020-11-13 22:42:21,487 - 22152 - root - INFO - Encuentra mejor solucion en busqueda exahustiva
2020-11-13 22:42:21,487 - 22152 - root - INFO - Agrega a la poblacion el mejor individuo de la BH
2020-11-13 22:42:21,487 - 22152 - root - INFO - AGREGADO:{'layer_sizes': (64,), 'activation': 'relu', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7802657758768613}
2020-11-13 22:42:21,488 - 22152 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613]
2020-11-13 22:42:21,490 - 22152 - root - INFO - generacion 1 de 20
2020-11-13 22:42:46,898 - 13112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 0
2020-11-13 22:44:41,943 - 13112 - root - INFO - Mejora la solucion con la busqueda local: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7807811401518505}
2020-11-13 22:44:41,944 - 13112 - root - INFO - Encuentra mejor solucion en busqueda local
2020-11-13 22:44:41,944 - 13112 - root - INFO - Agrega a la poblacion el mejor individuo de LS
2020-11-13 22:44:41,944 - 13112 - root - INFO - AGREGADO:{'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7807811401518505}
2020-11-13 22:44:41,945 - 13112 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505]
2020-11-13 22:44:41,946 - 13112 - root - INFO - generacion 1 de 20
2020-11-13 22:53:48,326 - 1776 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 0
2020-11-13 22:53:48,327 - 1776 - root - INFO - Entra a bin cont
2020-11-13 22:54:31,791 - 21132 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 0
2020-11-13 22:54:31,792 - 21132 - root - INFO - Entra a bin cont
2020-11-13 22:56:17,994 - 22152 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 1
2020-11-13 22:56:17,995 - 22152 - root - INFO - Inicia busqueda exahustiva
2020-11-13 22:58:39,974 - 13112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 1
2020-11-13 22:58:57,468 - 22152 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413]
2020-11-13 22:58:57,469 - 22152 - root - INFO - generacion 2 de 20
2020-11-13 22:59:22,330 - 1776 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-13 22:59:22,331 - 1776 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287]
2020-11-13 22:59:22,332 - 1776 - root - INFO - generacion 1 de 20
2020-11-13 23:01:24,789 - 13112 - root - INFO - Mejora la solucion con la busqueda local: {'layer_sizes': (19, 3, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.05095, 'fitness': 0.7824869458855567}
2020-11-13 23:01:24,790 - 13112 - root - INFO - Encuentra mejor solucion en busqueda local
2020-11-13 23:01:24,791 - 13112 - root - INFO - Agrega a la poblacion el mejor individuo de LS
2020-11-13 23:01:24,791 - 13112 - root - INFO - AGREGADO:{'layer_sizes': (19, 3, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.05095, 'fitness': 0.7824869458855567}
2020-11-13 23:01:24,791 - 13112 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567]
2020-11-13 23:01:24,793 - 13112 - root - INFO - generacion 2 de 20
2020-11-13 23:10:21,985 - 21132 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-13 23:10:21,986 - 21132 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287]
2020-11-13 23:10:21,987 - 21132 - root - INFO - generacion 1 de 20
2020-11-13 23:15:15,583 - 22152 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 2
2020-11-13 23:15:15,583 - 22152 - root - INFO - Inicia busqueda exahustiva
2020-11-13 23:18:34,466 - 22152 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587]
2020-11-13 23:18:34,468 - 22152 - root - INFO - generacion 3 de 20
2020-11-13 23:18:43,212 - 13112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 2
2020-11-13 23:23:22,304 - 13112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-13 23:23:22,305 - 13112 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567]
2020-11-13 23:23:22,306 - 13112 - root - INFO - generacion 3 de 20
2020-11-13 23:29:48,897 - 1776 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-13 23:29:48,898 - 1776 - root - INFO - ANTES: {'layer_sizes': (68, 110, 14, 26), 'activation': 'logistic', 'alpha': 0.22662353515625, 'alpha_bin': array([0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0]), 'learning_rate_init': 0.382080078125, 'learning_rate_init_bin': array([0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0]), 'fitness': 0.7807413211840287}
2020-11-13 23:29:48,898 - 1776 - root - INFO - AHORA: {'layer_sizes': (68, 110, 14, 26), 'activation': 'logistic', 'alpha': 0.22662353515625, 'alpha_bin': array([0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0]), 'learning_rate_init': 0.382080078125, 'learning_rate_init_bin': array([0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0]), 'fitness': 0.7807413211840287}
2020-11-13 23:29:48,899 - 1776 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287]
2020-11-13 23:29:48,900 - 1776 - root - INFO - generacion 2 de 20
2020-11-13 23:36:22,575 - 22152 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-13 23:36:22,575 - 22152 - root - INFO - ANTES: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-13 23:36:22,576 - 22152 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-13 23:36:22,576 - 22152 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587]
2020-11-13 23:36:22,577 - 22152 - root - INFO - generacion 4 de 20
2020-11-13 23:39:12,679 - 21132 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-13 23:39:12,680 - 21132 - root - INFO - ANTES: {'layer_sizes': (68, 110, 14, 26), 'activation': 'logistic', 'alpha': 0.22662353515625, 'alpha_bin': array([0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0]), 'learning_rate_init': 0.382080078125, 'learning_rate_init_bin': array([0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0]), 'fitness': 0.7807413211840287}
2020-11-13 23:39:12,681 - 21132 - root - INFO - AHORA: {'layer_sizes': (68, 110, 14, 26), 'activation': 'logistic', 'alpha': 0.22662353515625, 'alpha_bin': array([0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0]), 'learning_rate_init': 0.382080078125, 'learning_rate_init_bin': array([0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0]), 'fitness': 0.7807413211840287}
2020-11-13 23:39:12,681 - 21132 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287]
2020-11-13 23:39:12,682 - 21132 - root - INFO - generacion 2 de 20
2020-11-13 23:41:59,176 - 13112 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-13 23:41:59,176 - 13112 - root - INFO - ANTES: {'layer_sizes': (19, 3, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.05095, 'fitness': 0.7824869458855567}
2020-11-13 23:41:59,176 - 13112 - root - INFO - AHORA: {'layer_sizes': (19, 3, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.05095, 'fitness': 0.7824869458855567}
2020-11-13 23:41:59,176 - 13112 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567]
2020-11-13 23:41:59,177 - 13112 - root - INFO - generacion 4 de 20
2020-11-13 23:52:57,928 - 22152 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-13 23:52:57,928 - 22152 - root - INFO - ANTES: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-13 23:52:57,929 - 22152 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-13 23:52:57,929 - 22152 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-13 23:52:57,930 - 22152 - root - INFO - generacion 5 de 20
2020-11-14 00:02:38,792 - 1776 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 00:02:38,792 - 1776 - root - INFO - ANTES: {'layer_sizes': (68, 110, 14, 26), 'activation': 'logistic', 'alpha': 0.22662353515625, 'alpha_bin': array([0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0]), 'learning_rate_init': 0.382080078125, 'learning_rate_init_bin': array([0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0]), 'fitness': 0.7807413211840287}
2020-11-14 00:02:38,793 - 1776 - root - INFO - AHORA: {'layer_sizes': (68, 110, 14, 26), 'activation': 'logistic', 'alpha': 0.22662353515625, 'alpha_bin': array([0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0]), 'learning_rate_init': 0.382080078125, 'learning_rate_init_bin': array([0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0]), 'fitness': 0.7807413211840287}
2020-11-14 00:02:38,793 - 1776 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7807413211840287]
2020-11-14 00:02:38,795 - 1776 - root - INFO - generacion 3 de 20
2020-11-14 00:04:31,582 - 21132 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 2
2020-11-14 00:04:31,582 - 21132 - root - INFO - Entra a bin cont
2020-11-14 00:04:50,261 - 21132 - root - INFO - Mejora la solucion con la busqueda local: {'layer_sizes': (7, 81, 127), 'activation': 'identity', 'alpha': 0.02899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.01861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7817099612800357}
2020-11-14 00:04:50,262 - 21132 - root - INFO - Encuentra mejor solucion en busqueda local
2020-11-14 00:04:50,263 - 21132 - root - INFO - Agrega a la poblacion el mejor individuo de LS
2020-11-14 00:04:50,263 - 21132 - root - INFO - AGREGADO:{'layer_sizes': (7, 81, 127), 'activation': 'identity', 'alpha': 0.02899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.01861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7817099612800357}
2020-11-14 00:04:50,264 - 21132 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7817099612800357]
2020-11-14 00:04:50,265 - 21132 - root - INFO - generacion 3 de 20
2020-11-14 00:07:06,260 - 13112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 4
2020-11-14 00:09:20,917 - 22152 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 00:09:20,917 - 22152 - root - INFO - ANTES: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 00:09:20,918 - 22152 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 00:09:20,918 - 22152 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-14 00:09:20,919 - 22152 - root - INFO - generacion 6 de 20
2020-11-14 00:11:20,877 - 13112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-14 00:11:20,877 - 13112 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229]
2020-11-14 00:11:20,878 - 13112 - root - INFO - generacion 5 de 20
2020-11-14 00:25:26,341 - 22152 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 00:25:26,342 - 22152 - root - INFO - ANTES: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 00:25:26,342 - 22152 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 00:25:26,342 - 22152 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-14 00:25:26,343 - 22152 - root - INFO - generacion 7 de 20
2020-11-14 00:27:16,111 - 1776 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 3
2020-11-14 00:27:16,111 - 1776 - root - INFO - Entra a bin cont
2020-11-14 00:32:03,087 - 21132 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 3
2020-11-14 00:32:03,087 - 21132 - root - INFO - Entra a bin cont
2020-11-14 00:32:13,756 - 21132 - root - INFO - Mejora la solucion con la busqueda local: {'layer_sizes': (57, 36, 127), 'activation': 'identity', 'alpha': 0.02899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.018646240234375, 'learning_rate_init_bin': array([1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7824789432442188}
2020-11-14 00:32:13,757 - 21132 - root - INFO - Encuentra mejor solucion en busqueda local
2020-11-14 00:32:13,758 - 21132 - root - INFO - Agrega a la poblacion el mejor individuo de LS
2020-11-14 00:32:13,759 - 21132 - root - INFO - AGREGADO:{'layer_sizes': (57, 36, 127), 'activation': 'identity', 'alpha': 0.02899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.018646240234375, 'learning_rate_init_bin': array([1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7824789432442188}
2020-11-14 00:32:13,759 - 21132 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7817099612800357, 0.7824789432442188]
2020-11-14 00:32:13,761 - 21132 - root - INFO - generacion 4 de 20
2020-11-14 00:33:47,959 - 1776 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-14 00:33:47,960 - 1776 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7807413211840287, 0.7812319588511952]
2020-11-14 00:33:47,961 - 1776 - root - INFO - generacion 4 de 20
2020-11-14 00:35:21,911 - 13112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 5
2020-11-14 00:36:20,348 - 13112 - root - INFO - Mejora la solucion con la busqueda local: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-14 00:36:20,349 - 13112 - root - INFO - Encuentra mejor solucion en busqueda local
2020-11-14 00:36:20,349 - 13112 - root - INFO - Agrega a la poblacion el mejor individuo de LS
2020-11-14 00:36:20,349 - 13112 - root - INFO - AGREGADO:{'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-14 00:36:20,350 - 13112 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865]
2020-11-14 00:36:20,351 - 13112 - root - INFO - generacion 6 de 20
2020-11-14 00:43:42,893 - 22152 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 00:43:42,893 - 22152 - root - INFO - ANTES: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 00:43:42,893 - 22152 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 00:43:42,893 - 22152 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-14 00:43:42,895 - 22152 - root - INFO - generacion 8 de 20
2020-11-14 00:56:10,118 - 13112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 6
2020-11-14 00:58:36,139 - 21132 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 4
2020-11-14 00:58:36,139 - 21132 - root - INFO - Entra a bin cont
2020-11-14 00:59:55,375 - 13112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-14 00:59:55,376 - 13112 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865]
2020-11-14 00:59:55,377 - 13112 - root - INFO - generacion 7 de 20
2020-11-14 01:03:01,217 - 1776 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 4
2020-11-14 01:03:01,217 - 1776 - root - INFO - Entra a bin cont
2020-11-14 01:04:37,909 - 1776 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-14 01:04:37,910 - 1776 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7807413211840287, 0.7812319588511952, 0.7821737065760075]
2020-11-14 01:04:37,912 - 1776 - root - INFO - generacion 5 de 20
2020-11-14 01:05:02,952 - 22152 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 01:05:02,952 - 22152 - root - INFO - ANTES: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 01:05:02,952 - 22152 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 01:05:02,952 - 22152 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-14 01:05:02,954 - 22152 - root - INFO - generacion 9 de 20
2020-11-14 01:08:12,996 - 21132 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-14 01:08:12,996 - 21132 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7817099612800357, 0.7824789432442188, 0.7827520236679282]
2020-11-14 01:08:12,998 - 21132 - root - INFO - generacion 5 de 20
2020-11-14 01:17:47,784 - 13112 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 01:17:47,785 - 13112 - root - INFO - ANTES: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-14 01:17:47,785 - 13112 - root - INFO - AHORA: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-14 01:17:47,785 - 13112 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865]
2020-11-14 01:17:47,786 - 13112 - root - INFO - generacion 8 de 20
2020-11-14 01:23:16,847 - 22152 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 01:23:16,847 - 22152 - root - INFO - ANTES: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 01:23:16,848 - 22152 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 01:23:16,848 - 22152 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-14 01:23:16,849 - 22152 - root - INFO - generacion 10 de 20
2020-11-14 01:31:10,659 - 1776 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 01:31:10,659 - 1776 - root - INFO - ANTES: {'layer_sizes': (7, 81), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 1.246337890625, 'learning_rate_init_bin': array([0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]), 'fitness': 0.7821737065760075}
2020-11-14 01:31:10,659 - 1776 - root - INFO - AHORA: {'layer_sizes': (7, 81), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 1.246337890625, 'learning_rate_init_bin': array([0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]), 'fitness': 0.7821737065760075}
2020-11-14 01:31:10,660 - 1776 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7807413211840287, 0.7812319588511952, 0.7821737065760075, 0.7821737065760075]
2020-11-14 01:31:10,661 - 1776 - root - INFO - generacion 6 de 20
2020-11-14 01:36:14,303 - 21132 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 01:36:14,304 - 21132 - root - INFO - ANTES: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.382080078125, 'learning_rate_init_bin': array([0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0]), 'fitness': 0.7827520236679282}
2020-11-14 01:36:14,304 - 21132 - root - INFO - AHORA: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.382080078125, 'learning_rate_init_bin': array([0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0]), 'fitness': 0.7827520236679282}
2020-11-14 01:36:14,305 - 21132 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7817099612800357, 0.7824789432442188, 0.7827520236679282, 0.7827520236679282]
2020-11-14 01:36:14,306 - 21132 - root - INFO - generacion 6 de 20
2020-11-14 01:39:24,834 - 13112 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 01:39:24,835 - 13112 - root - INFO - ANTES: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-14 01:39:24,835 - 13112 - root - INFO - AHORA: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-14 01:39:24,835 - 13112 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865]
2020-11-14 01:39:24,836 - 13112 - root - INFO - generacion 9 de 20
2020-11-14 01:39:34,914 - 22152 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 01:39:34,914 - 22152 - root - INFO - ANTES: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 01:39:34,914 - 22152 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 01:39:34,914 - 22152 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-14 01:39:34,916 - 22152 - root - INFO - generacion 11 de 20
2020-11-14 01:53:15,767 - 1776 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 01:53:15,768 - 1776 - root - INFO - ANTES: {'layer_sizes': (7, 81), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 1.246337890625, 'learning_rate_init_bin': array([0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]), 'fitness': 0.7821737065760075}
2020-11-14 01:53:15,768 - 1776 - root - INFO - AHORA: {'layer_sizes': (7, 81), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 1.246337890625, 'learning_rate_init_bin': array([0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]), 'fitness': 0.7821737065760075}
2020-11-14 01:53:15,768 - 1776 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7807413211840287, 0.7812319588511952, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075]
2020-11-14 01:53:15,770 - 1776 - root - INFO - generacion 7 de 20
2020-11-14 01:56:55,654 - 13112 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 01:56:55,654 - 13112 - root - INFO - ANTES: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-14 01:56:55,655 - 13112 - root - INFO - AHORA: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-14 01:56:55,655 - 13112 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865]
2020-11-14 01:56:55,656 - 13112 - root - INFO - generacion 10 de 20
2020-11-14 02:00:46,579 - 21132 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 6
2020-11-14 02:00:46,579 - 21132 - root - INFO - Entra a bin cont
2020-11-14 02:00:46,836 - 22152 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 02:00:46,836 - 22152 - root - INFO - ANTES: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 02:00:46,836 - 22152 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 02:00:46,836 - 22152 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-14 02:00:46,838 - 22152 - root - INFO - generacion 12 de 20
2020-11-14 02:09:31,458 - 13112 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 02:09:31,459 - 13112 - root - INFO - ANTES: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-14 02:09:31,459 - 13112 - root - INFO - AHORA: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-14 02:09:31,459 - 13112 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865]
2020-11-14 02:09:31,461 - 13112 - root - INFO - generacion 11 de 20
2020-11-14 02:13:19,781 - 1776 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 02:13:19,782 - 1776 - root - INFO - ANTES: {'layer_sizes': (7, 81), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 1.246337890625, 'learning_rate_init_bin': array([0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]), 'fitness': 0.7821737065760075}
2020-11-14 02:13:19,782 - 1776 - root - INFO - AHORA: {'layer_sizes': (7, 81), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 1.246337890625, 'learning_rate_init_bin': array([0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]), 'fitness': 0.7821737065760075}
2020-11-14 02:13:19,782 - 1776 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7807413211840287, 0.7812319588511952, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075]
2020-11-14 02:13:19,784 - 1776 - root - INFO - generacion 8 de 20
2020-11-14 02:16:58,685 - 21132 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-14 02:16:58,686 - 21132 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7817099612800357, 0.7824789432442188, 0.7827520236679282, 0.7827520236679282, 0.7832352122745289]
2020-11-14 02:16:58,687 - 21132 - root - INFO - generacion 7 de 20
2020-11-14 02:18:28,224 - 13112 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 02:18:28,224 - 13112 - root - INFO - ANTES: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-14 02:18:28,224 - 13112 - root - INFO - AHORA: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832020168520865}
2020-11-14 02:18:28,225 - 13112 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865]
2020-11-14 02:18:28,226 - 13112 - root - INFO - generacion 12 de 20
2020-11-14 02:22:23,405 - 22152 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 02:22:23,405 - 22152 - root - INFO - ANTES: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 02:22:23,406 - 22152 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 02:22:23,406 - 22152 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-14 02:22:23,407 - 22152 - root - INFO - generacion 13 de 20
2020-11-14 02:33:06,983 - 1776 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 02:33:06,984 - 1776 - root - INFO - ANTES: {'layer_sizes': (7, 81), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 1.246337890625, 'learning_rate_init_bin': array([0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]), 'fitness': 0.7821737065760075}
2020-11-14 02:33:06,984 - 1776 - root - INFO - AHORA: {'layer_sizes': (7, 81), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 1.246337890625, 'learning_rate_init_bin': array([0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]), 'fitness': 0.7821737065760075}
2020-11-14 02:33:06,984 - 1776 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7807413211840287, 0.7812319588511952, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075]
2020-11-14 02:33:06,986 - 1776 - root - INFO - generacion 9 de 20
2020-11-14 02:34:04,613 - 13112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 12
2020-11-14 02:37:39,429 - 13112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-14 02:37:39,430 - 13112 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832070185029226]
2020-11-14 02:37:39,431 - 13112 - root - INFO - generacion 13 de 20
2020-11-14 02:38:12,803 - 21132 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 02:38:12,803 - 21132 - root - INFO - ANTES: {'layer_sizes': (20, 114, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7832352122745289}
2020-11-14 02:38:12,804 - 21132 - root - INFO - AHORA: {'layer_sizes': (20, 114, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7832352122745289}
2020-11-14 02:38:12,804 - 21132 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7817099612800357, 0.7824789432442188, 0.7827520236679282, 0.7827520236679282, 0.7832352122745289, 0.7832352122745289]
2020-11-14 02:38:12,805 - 21132 - root - INFO - generacion 8 de 20
2020-11-14 02:43:46,414 - 22152 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 02:43:46,415 - 22152 - root - INFO - ANTES: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 02:43:46,415 - 22152 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 02:43:46,415 - 22152 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-14 02:43:46,417 - 22152 - root - INFO - generacion 14 de 20
2020-11-14 02:52:02,544 - 13112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 13
2020-11-14 02:55:09,417 - 1776 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 02:55:09,418 - 1776 - root - INFO - ANTES: {'layer_sizes': (7, 81), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 1.246337890625, 'learning_rate_init_bin': array([0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]), 'fitness': 0.7821737065760075}
2020-11-14 02:55:09,418 - 1776 - root - INFO - AHORA: {'layer_sizes': (7, 81), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 1.246337890625, 'learning_rate_init_bin': array([0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]), 'fitness': 0.7821737065760075}
2020-11-14 02:55:09,418 - 1776 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7807413211840287, 0.7812319588511952, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075]
2020-11-14 02:55:09,419 - 1776 - root - INFO - generacion 10 de 20
2020-11-14 02:55:45,897 - 13112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-14 02:55:45,897 - 13112 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832070185029226, 0.7832074264045441]
2020-11-14 02:55:45,898 - 13112 - root - INFO - generacion 14 de 20
2020-11-14 02:57:21,093 - 21132 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 02:57:21,093 - 21132 - root - INFO - ANTES: {'layer_sizes': (20, 114, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7832352122745289}
2020-11-14 02:57:21,094 - 21132 - root - INFO - AHORA: {'layer_sizes': (20, 114, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7832352122745289}
2020-11-14 02:57:21,094 - 21132 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7817099612800357, 0.7824789432442188, 0.7827520236679282, 0.7827520236679282, 0.7832352122745289, 0.7832352122745289, 0.7832352122745289]
2020-11-14 02:57:21,095 - 21132 - root - INFO - generacion 9 de 20
2020-11-14 03:04:13,913 - 22152 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 03:04:13,913 - 22152 - root - INFO - ANTES: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 03:04:13,914 - 22152 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 03:04:13,914 - 22152 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-14 03:04:13,915 - 22152 - root - INFO - generacion 15 de 20
2020-11-14 03:10:22,586 - 1776 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 10
2020-11-14 03:10:22,586 - 1776 - root - INFO - Entra a bin cont
2020-11-14 03:11:33,791 - 13112 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 03:11:33,791 - 13112 - root - INFO - ANTES: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001634218053826597, 'learning_rate_init': 0.0010554300392555654, 'fitness': 0.7832074264045441}
2020-11-14 03:11:33,791 - 13112 - root - INFO - AHORA: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001634218053826597, 'learning_rate_init': 0.0010554300392555654, 'fitness': 0.7832074264045441}
2020-11-14 03:11:33,792 - 13112 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832070185029226, 0.7832074264045441, 0.7832074264045441]
2020-11-14 03:11:33,793 - 13112 - root - INFO - generacion 15 de 20
2020-11-14 03:13:56,330 - 21132 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 9
2020-11-14 03:13:56,330 - 21132 - root - INFO - Entra a bin cont
2020-11-14 03:17:48,194 - 1776 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-14 03:17:48,195 - 1776 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7807413211840287, 0.7812319588511952, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7827576371711967]
2020-11-14 03:17:48,196 - 1776 - root - INFO - generacion 11 de 20
2020-11-14 03:28:16,210 - 22152 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 03:28:16,210 - 22152 - root - INFO - ANTES: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 03:28:16,211 - 22152 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 03:28:16,211 - 22152 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-14 03:28:16,212 - 22152 - root - INFO - generacion 16 de 20
2020-11-14 03:29:38,736 - 21132 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-14 03:29:38,737 - 21132 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7817099612800357, 0.7824789432442188, 0.7827520236679282, 0.7827520236679282, 0.7832352122745289, 0.7832352122745289, 0.7832352122745289, 0.7834814488867607]
2020-11-14 03:29:38,738 - 21132 - root - INFO - generacion 10 de 20
2020-11-14 03:30:26,937 - 1776 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 03:30:26,938 - 1776 - root - INFO - ANTES: {'layer_sizes': (7, 72, 127, 36), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.2264404296875, 'learning_rate_init_bin': array([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7827576371711967}
2020-11-14 03:30:26,938 - 1776 - root - INFO - AHORA: {'layer_sizes': (7, 72, 127, 36), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.2264404296875, 'learning_rate_init_bin': array([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7827576371711967}
2020-11-14 03:30:26,939 - 1776 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7807413211840287, 0.7812319588511952, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7827576371711967, 0.7827576371711967]
2020-11-14 03:30:26,940 - 1776 - root - INFO - generacion 12 de 20
2020-11-14 03:40:50,327 - 1776 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 03:40:50,328 - 1776 - root - INFO - ANTES: {'layer_sizes': (7, 72, 127, 36), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.2264404296875, 'learning_rate_init_bin': array([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7827576371711967}
2020-11-14 03:40:50,328 - 1776 - root - INFO - AHORA: {'layer_sizes': (7, 72, 127, 36), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.2264404296875, 'learning_rate_init_bin': array([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7827576371711967}
2020-11-14 03:40:50,328 - 1776 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7807413211840287, 0.7812319588511952, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967]
2020-11-14 03:40:50,330 - 1776 - root - INFO - generacion 13 de 20
2020-11-14 03:41:21,859 - 13112 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 03:41:21,859 - 13112 - root - INFO - ANTES: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001634218053826597, 'learning_rate_init': 0.0010554300392555654, 'fitness': 0.7832074264045441}
2020-11-14 03:41:21,859 - 13112 - root - INFO - AHORA: {'layer_sizes': (42, 62), 'activation': 'identity', 'alpha': 0.0001634218053826597, 'learning_rate_init': 0.0010554300392555654, 'fitness': 0.7832074264045441}
2020-11-14 03:41:21,859 - 13112 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832070185029226, 0.7832074264045441, 0.7832074264045441, 0.7832074264045441]
2020-11-14 03:41:21,861 - 13112 - root - INFO - generacion 16 de 20
2020-11-14 03:42:26,183 - 21132 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 03:42:26,183 - 21132 - root - INFO - ANTES: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7834814488867607}
2020-11-14 03:42:26,184 - 21132 - root - INFO - AHORA: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7834814488867607}
2020-11-14 03:42:26,184 - 21132 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7817099612800357, 0.7824789432442188, 0.7827520236679282, 0.7827520236679282, 0.7832352122745289, 0.7832352122745289, 0.7832352122745289, 0.7834814488867607, 0.7834814488867607]
2020-11-14 03:42:26,185 - 21132 - root - INFO - generacion 11 de 20
2020-11-14 03:43:42,087 - 22152 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 03:43:42,087 - 22152 - root - INFO - ANTES: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 03:43:42,087 - 22152 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 03:43:42,087 - 22152 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-14 03:43:42,088 - 22152 - root - INFO - generacion 17 de 20
2020-11-14 03:50:41,600 - 1776 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 03:50:41,600 - 1776 - root - INFO - ANTES: {'layer_sizes': (7, 72, 127, 36), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.2264404296875, 'learning_rate_init_bin': array([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7827576371711967}
2020-11-14 03:50:41,601 - 1776 - root - INFO - AHORA: {'layer_sizes': (7, 72, 127, 36), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.2264404296875, 'learning_rate_init_bin': array([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7827576371711967}
2020-11-14 03:50:41,601 - 1776 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7807413211840287, 0.7812319588511952, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967]
2020-11-14 03:50:41,602 - 1776 - root - INFO - generacion 14 de 20
2020-11-14 03:53:19,598 - 21132 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 03:53:19,598 - 21132 - root - INFO - ANTES: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7834814488867607}
2020-11-14 03:53:19,599 - 21132 - root - INFO - AHORA: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7834814488867607}
2020-11-14 03:53:19,599 - 21132 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7817099612800357, 0.7824789432442188, 0.7827520236679282, 0.7827520236679282, 0.7832352122745289, 0.7832352122745289, 0.7832352122745289, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607]
2020-11-14 03:53:19,600 - 21132 - root - INFO - generacion 12 de 20
2020-11-14 04:00:17,101 - 1776 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 04:00:17,102 - 1776 - root - INFO - ANTES: {'layer_sizes': (7, 72, 127, 36), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.2264404296875, 'learning_rate_init_bin': array([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7827576371711967}
2020-11-14 04:00:17,102 - 1776 - root - INFO - AHORA: {'layer_sizes': (7, 72, 127, 36), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.2264404296875, 'learning_rate_init_bin': array([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7827576371711967}
2020-11-14 04:00:17,102 - 1776 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7807413211840287, 0.7812319588511952, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967]
2020-11-14 04:00:17,103 - 1776 - root - INFO - generacion 15 de 20
2020-11-14 04:00:22,282 - 22152 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 04:00:22,282 - 22152 - root - INFO - ANTES: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 04:00:22,282 - 22152 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 04:00:22,283 - 22152 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-14 04:00:22,284 - 22152 - root - INFO - generacion 18 de 20
2020-11-14 04:03:09,289 - 13112 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 16
2020-11-14 04:08:40,974 - 21132 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 04:08:40,974 - 21132 - root - INFO - ANTES: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7834814488867607}
2020-11-14 04:08:40,975 - 21132 - root - INFO - AHORA: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7834814488867607}
2020-11-14 04:08:40,975 - 21132 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7817099612800357, 0.7824789432442188, 0.7827520236679282, 0.7827520236679282, 0.7832352122745289, 0.7832352122745289, 0.7832352122745289, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607]
2020-11-14 04:08:40,976 - 21132 - root - INFO - generacion 13 de 20
2020-11-14 04:09:09,343 - 1776 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 04:09:09,344 - 1776 - root - INFO - ANTES: {'layer_sizes': (7, 72, 127, 36), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.2264404296875, 'learning_rate_init_bin': array([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7827576371711967}
2020-11-14 04:09:09,344 - 1776 - root - INFO - AHORA: {'layer_sizes': (7, 72, 127, 36), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.2264404296875, 'learning_rate_init_bin': array([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7827576371711967}
2020-11-14 04:09:09,344 - 1776 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7807413211840287, 0.7812319588511952, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967]
2020-11-14 04:09:09,346 - 1776 - root - INFO - generacion 16 de 20
2020-11-14 04:15:02,988 - 13112 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-11-14 04:15:02,988 - 13112 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832070185029226, 0.7832074264045441, 0.7832074264045441, 0.7832074264045441, 0.7832074943881477]
2020-11-14 04:15:02,989 - 13112 - root - INFO - generacion 17 de 20
2020-11-14 04:19:33,144 - 22152 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 04:19:33,144 - 22152 - root - INFO - ANTES: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 04:19:33,144 - 22152 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 04:19:33,144 - 22152 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-14 04:19:33,145 - 22152 - root - INFO - generacion 19 de 20
2020-11-14 04:19:33,730 - 1776 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 04:19:33,731 - 1776 - root - INFO - ANTES: {'layer_sizes': (7, 72, 127, 36), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.2264404296875, 'learning_rate_init_bin': array([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7827576371711967}
2020-11-14 04:19:33,731 - 1776 - root - INFO - AHORA: {'layer_sizes': (7, 72, 127, 36), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.2264404296875, 'learning_rate_init_bin': array([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7827576371711967}
2020-11-14 04:19:33,732 - 1776 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7807413211840287, 0.7812319588511952, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967]
2020-11-14 04:19:33,733 - 1776 - root - INFO - generacion 17 de 20
2020-11-14 04:22:54,919 - 21132 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 04:22:54,919 - 21132 - root - INFO - ANTES: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7834814488867607}
2020-11-14 04:22:54,920 - 21132 - root - INFO - AHORA: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7834814488867607}
2020-11-14 04:22:54,920 - 21132 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7817099612800357, 0.7824789432442188, 0.7827520236679282, 0.7827520236679282, 0.7832352122745289, 0.7832352122745289, 0.7832352122745289, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607]
2020-11-14 04:22:54,921 - 21132 - root - INFO - generacion 14 de 20
2020-11-14 04:29:04,003 - 1776 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 04:29:04,004 - 1776 - root - INFO - ANTES: {'layer_sizes': (7, 72, 127, 36), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.2264404296875, 'learning_rate_init_bin': array([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7827576371711967}
2020-11-14 04:29:04,004 - 1776 - root - INFO - AHORA: {'layer_sizes': (7, 72, 127, 36), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.2264404296875, 'learning_rate_init_bin': array([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7827576371711967}
2020-11-14 04:29:04,004 - 1776 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7807413211840287, 0.7812319588511952, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967]
2020-11-14 04:29:04,006 - 1776 - root - INFO - generacion 18 de 20
2020-11-14 04:34:20,541 - 21132 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 04:34:20,542 - 21132 - root - INFO - ANTES: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7834814488867607}
2020-11-14 04:34:20,542 - 21132 - root - INFO - AHORA: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7834814488867607}
2020-11-14 04:34:20,542 - 21132 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7817099612800357, 0.7824789432442188, 0.7827520236679282, 0.7827520236679282, 0.7832352122745289, 0.7832352122745289, 0.7832352122745289, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607]
2020-11-14 04:34:20,544 - 21132 - root - INFO - generacion 15 de 20
2020-11-14 04:34:38,896 - 13112 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 04:34:38,896 - 13112 - root - INFO - ANTES: {'layer_sizes': (42, 62), 'activation': 'relu', 'alpha': 0.00018350867149338103, 'learning_rate_init': 0.0010554300392555654, 'fitness': 0.7832074943881477}
2020-11-14 04:34:38,896 - 13112 - root - INFO - AHORA: {'layer_sizes': (42, 62), 'activation': 'relu', 'alpha': 0.00018350867149338103, 'learning_rate_init': 0.0010554300392555654, 'fitness': 0.7832074943881477}
2020-11-14 04:34:38,896 - 13112 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832070185029226, 0.7832074264045441, 0.7832074264045441, 0.7832074264045441, 0.7832074943881477, 0.7832074943881477]
2020-11-14 04:34:38,898 - 13112 - root - INFO - generacion 18 de 20
2020-11-14 04:38:59,406 - 22152 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 04:38:59,406 - 22152 - root - INFO - ANTES: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 04:38:59,406 - 22152 - root - INFO - AHORA: {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': []}
2020-11-14 04:38:59,406 - 22152 - root - INFO - Historia: [0.780008797855261, 0.7802657758768613, 0.7809234881058413, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587, 0.7840247835586587]
2020-11-14 04:39:07,448 - 1776 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 04:39:07,449 - 1776 - root - INFO - ANTES: {'layer_sizes': (7, 72, 127, 36), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.2264404296875, 'learning_rate_init_bin': array([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7827576371711967}
2020-11-14 04:39:07,449 - 1776 - root - INFO - AHORA: {'layer_sizes': (7, 72, 127, 36), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.2264404296875, 'learning_rate_init_bin': array([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7827576371711967}
2020-11-14 04:39:07,449 - 1776 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7807413211840287, 0.7812319588511952, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967]
2020-11-14 04:39:07,450 - 1776 - root - INFO - generacion 19 de 20
2020-11-14 04:39:12,093 - 22152 - root - INFO - ************************************************************
2020-11-14 04:39:12,093 - 22152 - root - INFO - FIN ALGORITMO GENETICO: tiempo 22934.1907 mins
2020-11-14 04:39:12,093 - 22152 - root - INFO - ************************************************************
2020-11-14 04:39:12,093 - 22152 - root - INFO - La mejor solucion fue
2020-11-14 04:39:12,094 - 22152 - root - INFO - {'layer_sizes': (19, 114, 110), 'activation': 'identity', 'alpha': 1.2774084876949148, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.7840247835586587, 'alpha_bin': '[]', 'learning_rate_init_bin': '[]'}
2020-11-14 04:46:23,665 - 21132 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 04:46:23,665 - 21132 - root - INFO - ANTES: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7834814488867607}
2020-11-14 04:46:23,666 - 21132 - root - INFO - AHORA: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7834814488867607}
2020-11-14 04:46:23,666 - 21132 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7817099612800357, 0.7824789432442188, 0.7827520236679282, 0.7827520236679282, 0.7832352122745289, 0.7832352122745289, 0.7832352122745289, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607]
2020-11-14 04:46:23,667 - 21132 - root - INFO - generacion 16 de 20
2020-11-14 04:47:15,848 - 1776 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 04:47:15,849 - 1776 - root - INFO - ANTES: {'layer_sizes': (7, 72, 127, 36), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.2264404296875, 'learning_rate_init_bin': array([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7827576371711967}
2020-11-14 04:47:15,849 - 1776 - root - INFO - AHORA: {'layer_sizes': (7, 72, 127, 36), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': array([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.2264404296875, 'learning_rate_init_bin': array([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7827576371711967}
2020-11-14 04:47:15,849 - 1776 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7807413211840287, 0.7812319588511952, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7821737065760075, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967, 0.7827576371711967]
2020-11-14 04:47:26,895 - 1776 - root - INFO - ************************************************************
2020-11-14 04:47:26,896 - 1776 - root - INFO - FIN ALGORITMO GENETICO: tiempo 23390.7715 mins
2020-11-14 04:47:26,896 - 1776 - root - INFO - ************************************************************
2020-11-14 04:47:26,896 - 1776 - root - INFO - La mejor solucion fue
2020-11-14 04:47:26,896 - 1776 - root - INFO - {'layer_sizes': (7, 72, 127, 36), 'activation': 'identity', 'alpha': 0.002410888671875, 'alpha_bin': '[1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]', 'learning_rate_init': 0.2264404296875, 'learning_rate_init_bin': '[0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]', 'fitness': 0.7827576371711967}
2020-11-14 04:47:38,542 - 13112 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 04:47:38,543 - 13112 - root - INFO - ANTES: {'layer_sizes': (42, 62), 'activation': 'relu', 'alpha': 0.00018350867149338103, 'learning_rate_init': 0.0010554300392555654, 'fitness': 0.7832074943881477}
2020-11-14 04:47:38,543 - 13112 - root - INFO - AHORA: {'layer_sizes': (42, 62), 'activation': 'relu', 'alpha': 0.00018350867149338103, 'learning_rate_init': 0.0010554300392555654, 'fitness': 0.7832074943881477}
2020-11-14 04:47:38,543 - 13112 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832070185029226, 0.7832074264045441, 0.7832074264045441, 0.7832074264045441, 0.7832074943881477, 0.7832074943881477, 0.7832074943881477]
2020-11-14 04:47:38,544 - 13112 - root - INFO - generacion 19 de 20
2020-11-14 04:55:42,582 - 21132 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 04:55:42,583 - 21132 - root - INFO - ANTES: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7834814488867607}
2020-11-14 04:55:42,583 - 21132 - root - INFO - AHORA: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7834814488867607}
2020-11-14 04:55:42,583 - 21132 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7817099612800357, 0.7824789432442188, 0.7827520236679282, 0.7827520236679282, 0.7832352122745289, 0.7832352122745289, 0.7832352122745289, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607]
2020-11-14 04:55:42,584 - 21132 - root - INFO - generacion 17 de 20
2020-11-14 05:04:17,068 - 21132 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 05:04:17,069 - 21132 - root - INFO - ANTES: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7834814488867607}
2020-11-14 05:04:17,069 - 21132 - root - INFO - AHORA: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7834814488867607}
2020-11-14 05:04:17,069 - 21132 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7817099612800357, 0.7824789432442188, 0.7827520236679282, 0.7827520236679282, 0.7832352122745289, 0.7832352122745289, 0.7832352122745289, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607]
2020-11-14 05:04:17,070 - 21132 - root - INFO - generacion 18 de 20
2020-11-14 05:06:45,076 - 13112 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 05:06:45,076 - 13112 - root - INFO - ANTES: {'layer_sizes': (42, 62), 'activation': 'relu', 'alpha': 0.00018350867149338103, 'learning_rate_init': 0.0010554300392555654, 'fitness': 0.7832074943881477}
2020-11-14 05:06:45,077 - 13112 - root - INFO - AHORA: {'layer_sizes': (42, 62), 'activation': 'relu', 'alpha': 0.00018350867149338103, 'learning_rate_init': 0.0010554300392555654, 'fitness': 0.7832074943881477}
2020-11-14 05:06:45,077 - 13112 - root - INFO - Historia: [0.780008797855261, 0.7807811401518505, 0.7824869458855567, 0.7824869458855567, 0.7824869458855567, 0.782664849264229, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832020168520865, 0.7832070185029226, 0.7832074264045441, 0.7832074264045441, 0.7832074264045441, 0.7832074943881477, 0.7832074943881477, 0.7832074943881477, 0.7832074943881477]
2020-11-14 05:08:20,625 - 13112 - root - INFO - ************************************************************
2020-11-14 05:08:20,625 - 13112 - root - INFO - FIN ALGORITMO GENETICO: tiempo 24577.8857 mins
2020-11-14 05:08:20,625 - 13112 - root - INFO - ************************************************************
2020-11-14 05:08:20,625 - 13112 - root - INFO - La mejor solucion fue
2020-11-14 05:08:20,626 - 13112 - root - INFO - {'layer_sizes': (42, 62), 'activation': 'relu', 'alpha': 0.00018350867149338103, 'learning_rate_init': 0.0010554300392555654, 'fitness': 0.7832074943881477, 'learning_rate_init_bin': '[]', 'alpha_bin': '[]'}
2020-11-14 05:11:14,583 - 21132 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 05:11:14,584 - 21132 - root - INFO - ANTES: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7834814488867607}
2020-11-14 05:11:14,584 - 21132 - root - INFO - AHORA: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7834814488867607}
2020-11-14 05:11:14,584 - 21132 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7817099612800357, 0.7824789432442188, 0.7827520236679282, 0.7827520236679282, 0.7832352122745289, 0.7832352122745289, 0.7832352122745289, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607]
2020-11-14 05:11:14,585 - 21132 - root - INFO - generacion 19 de 20
2020-11-14 05:17:03,977 - 21132 - root - INFO - YA SE EVALUO LA SOLUCION
2020-11-14 05:17:03,978 - 21132 - root - INFO - ANTES: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7834814488867607}
2020-11-14 05:17:03,978 - 21132 - root - INFO - AHORA: {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': array([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 'fitness': 0.7834814488867607}
2020-11-14 05:17:03,978 - 21132 - root - INFO - Historia: [0.7787815092833942, 0.7807413211840287, 0.7807413211840287, 0.7817099612800357, 0.7824789432442188, 0.7827520236679282, 0.7827520236679282, 0.7832352122745289, 0.7832352122745289, 0.7832352122745289, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607, 0.7834814488867607]
2020-11-14 05:17:09,428 - 21132 - root - INFO - ************************************************************
2020-11-14 05:17:09,428 - 21132 - root - INFO - FIN ALGORITMO GENETICO: tiempo 25145.0831 mins
2020-11-14 05:17:09,428 - 21132 - root - INFO - ************************************************************
2020-11-14 05:17:09,428 - 21132 - root - INFO - La mejor solucion fue
2020-11-14 05:17:09,428 - 21132 - root - INFO - {'layer_sizes': (20, 81, 127), 'activation': 'identity', 'alpha': 0.002899169921875, 'alpha_bin': '[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]', 'learning_rate_init': 0.1861572265625, 'learning_rate_init_bin': '[0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]', 'fitness': 0.7834814488867607}
2020-11-14 08:16:12,372 - 13112 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2020-11-14 08:16:12,372 - 13112 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2020-11-14 08:16:12,912 - 13112 - matplotlib.pyplot - DEBUG - Loaded backend qt5agg version unknown.
2020-11-14 08:16:12,912 - 13112 - matplotlib.pyplot - DEBUG - Loaded backend Qt5Agg version unknown.
2020-11-14 08:16:13,261 - 13112 - matplotlib.font_manager - DEBUG - findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-11-14 08:16:13,261 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,261 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,261 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,262 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-11-14 08:16:13,262 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-11-14 08:16:13,262 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-11-14 08:16:13,262 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,262 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,262 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,262 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-11-14 08:16:13,262 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-11-14 08:16:13,262 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,262 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,262 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,263 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,263 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,263 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,263 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,263 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,263 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,263 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,263 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,263 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,263 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-11-14 08:16:13,263 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-11-14 08:16:13,264 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,264 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,264 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-11-14 08:16:13,264 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,264 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,264 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-11-14 08:16:13,264 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,264 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-11-14 08:16:13,264 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,264 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,264 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-11-14 08:16:13,264 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-11-14 08:16:13,265 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-11-14 08:16:13,265 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,265 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,265 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,265 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,265 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,265 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,265 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,265 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,265 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-11-14 08:16:13,265 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
2020-11-14 08:16:13,266 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal regular normal>) = 10.05
2020-11-14 08:16:13,266 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 7.8986363636363635
2020-11-14 08:16:13,266 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,266 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,266 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,266 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,266 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,266 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,266 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,266 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,266 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal demi normal>) = 10.24
2020-11-14 08:16:13,266 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal demibold normal>) = 11.24
2020-11-14 08:16:13,267 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,267 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,267 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2020-11-14 08:16:13,267 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,267 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,267 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-11-14 08:16:13,267 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,267 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,267 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal demibold normal>) = 10.24
2020-11-14 08:16:13,267 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,267 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2020-11-14 08:16:13,268 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal demi condensed>) = 10.44
2020-11-14 08:16:13,268 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,268 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,268 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
2020-11-14 08:16:13,268 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,268 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,268 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2020-11-14 08:16:13,268 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,268 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,268 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,268 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-11-14 08:16:13,268 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,269 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,269 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,269 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,269 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,269 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,269 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,269 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,269 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,269 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-11-14 08:16:13,269 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-11-14 08:16:13,269 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,269 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,270 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-11-14 08:16:13,270 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,270 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,270 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2020-11-14 08:16:13,270 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2020-11-14 08:16:13,270 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,270 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,270 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,270 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2020-11-14 08:16:13,270 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,270 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,271 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,271 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,271 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2020-11-14 08:16:13,271 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,271 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal light normal>) = 10.24
2020-11-14 08:16:13,271 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,271 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-11-14 08:16:13,271 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,271 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-11-14 08:16:13,271 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,271 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,271 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,272 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,272 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-11-14 08:16:13,272 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,272 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,272 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-11-14 08:16:13,272 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,272 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,272 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2020-11-14 08:16:13,272 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,272 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,272 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal light normal>) = 10.24
2020-11-14 08:16:13,273 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2020-11-14 08:16:13,273 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,273 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,273 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,273 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-11-14 08:16:13,273 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,273 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,273 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,273 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,273 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,273 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,273 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,274 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal book normal>) = 11.05
2020-11-14 08:16:13,274 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,274 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal heavy normal>) = 10.43
2020-11-14 08:16:13,274 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,274 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,274 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,274 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal medium condensed>) = 10.344999999999999
2020-11-14 08:16:13,274 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,274 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,274 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,274 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,274 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,275 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,275 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal bold condensed>) = 10.535
2020-11-14 08:16:13,275 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,275 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,275 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,275 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,275 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,275 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,275 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,275 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,275 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,276 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal bold condensed>) = 10.535
2020-11-14 08:16:13,276 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,276 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,276 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,276 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal book normal>) = 11.05
2020-11-14 08:16:13,276 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,276 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-11-14 08:16:13,276 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,276 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2020-11-14 08:16:13,276 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,276 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,276 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,277 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,277 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal demi normal>) = 10.24
2020-11-14 08:16:13,277 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-11-14 08:16:13,277 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,277 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-11-14 08:16:13,277 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,277 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,277 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal black normal>) = 10.525
2020-11-14 08:16:13,277 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,277 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,277 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,277 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal regular normal>) = 10.05
2020-11-14 08:16:13,278 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,278 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,278 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-11-14 08:16:13,278 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,278 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,278 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,278 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,278 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,278 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,278 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,278 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,279 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-11-14 08:16:13,279 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal demi normal>) = 10.24
2020-11-14 08:16:13,279 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,279 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,279 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,279 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,279 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal light normal>) = 10.24
2020-11-14 08:16:13,279 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,279 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,279 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2020-11-14 08:16:13,279 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,280 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
2020-11-14 08:16:13,280 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,280 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,280 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,280 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,280 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,280 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal black normal>) = 10.525
2020-11-14 08:16:13,280 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal bold condensed>) = 10.535
2020-11-14 08:16:13,280 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-11-14 08:16:13,280 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,280 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2020-11-14 08:16:13,280 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-11-14 08:16:13,281 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,281 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,281 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,281 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,281 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-11-14 08:16:13,281 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,281 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,281 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,281 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2020-11-14 08:16:13,281 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,281 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal book normal>) = 10.05
2020-11-14 08:16:13,281 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-11-14 08:16:13,282 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,282 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal black normal>) = 10.525
2020-11-14 08:16:13,282 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,282 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,282 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,282 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal heavy normal>) = 11.43
2020-11-14 08:16:13,282 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,282 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,282 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-11-14 08:16:13,282 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,282 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal bold condensed>) = 10.535
2020-11-14 08:16:13,283 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,283 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-11-14 08:16:13,283 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,283 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,283 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,283 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,283 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,283 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,283 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,283 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal demi normal>) = 11.24
2020-11-14 08:16:13,283 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,283 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,284 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-11-14 08:16:13,284 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal black normal>) = 11.525
2020-11-14 08:16:13,284 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-11-14 08:16:13,284 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,284 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2020-11-14 08:16:13,284 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,284 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,284 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal bold normal>) = 11.335
2020-11-14 08:16:13,284 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,284 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,284 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-11-14 08:16:13,284 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,285 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,285 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,285 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal light normal>) = 10.24
2020-11-14 08:16:13,285 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-11-14 08:16:13,285 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,285 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,285 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal demibold normal>) = 10.24
2020-11-14 08:16:13,285 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,285 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,285 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-11-14 08:16:13,285 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,285 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,286 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-11-14 08:16:13,286 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,286 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-11-14 08:16:13,286 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-11-14 08:16:13,286 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal bold condensed>) = 10.535
2020-11-14 08:16:13,286 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,286 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,286 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,286 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,286 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal roman normal>) = 10.145
2020-11-14 08:16:13,286 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,287 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2020-11-14 08:16:13,287 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,287 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal book normal>) = 11.05
2020-11-14 08:16:13,287 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,287 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,287 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,287 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,287 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,287 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,287 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,287 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,287 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,288 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,288 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,288 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,288 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,288 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,288 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,288 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,288 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal medium normal>) = 10.145
2020-11-14 08:16:13,288 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,288 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,288 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal bold condensed>) = 10.535
2020-11-14 08:16:13,288 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,289 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,289 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,289 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,289 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
2020-11-14 08:16:13,289 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,289 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,289 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,289 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,289 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-11-14 08:16:13,289 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,289 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,290 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,290 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal demibold normal>) = 11.24
2020-11-14 08:16:13,290 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,290 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,290 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,290 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,290 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,290 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal book normal>) = 10.05
2020-11-14 08:16:13,290 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-11-14 08:16:13,290 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,290 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,290 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,291 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,291 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 6.8986363636363635
2020-11-14 08:16:13,291 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,291 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal regular normal>) = 10.05
2020-11-14 08:16:13,291 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,291 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,291 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,291 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,291 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-11-14 08:16:13,291 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,291 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
2020-11-14 08:16:13,291 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2020-11-14 08:16:13,292 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal roman normal>) = 10.145
2020-11-14 08:16:13,292 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,292 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,292 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-11-14 08:16:13,292 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-11-14 08:16:13,292 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-11-14 08:16:13,292 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,292 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-11-14 08:16:13,292 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,292 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,292 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,293 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,293 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,293 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,293 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal bold normal>) = 10.335
2020-11-14 08:16:13,293 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal bold condensed>) = 11.535
2020-11-14 08:16:13,293 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-11-14 08:16:13,293 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,293 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,293 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-11-14 08:16:13,293 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,293 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-11-14 08:16:13,293 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-11-14 08:16:13,294 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-11-14 08:16:13,294 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal demibold normal>) = 11.24
2020-11-14 08:16:13,294 - 13112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal book normal>) = 10.05
2020-11-14 08:16:13,294 - 13112 - matplotlib.font_manager - DEBUG - findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\pasal\\Anaconda3\\envs\\ciencia-datos\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2020-12-04 10:25:24,325 - 4256 - root - INFO - ************************************************************
2020-12-04 10:25:24,329 - 4256 - root - INFO - INICIA ALGORITMO GENETICO
2020-12-04 10:25:24,329 - 4256 - root - INFO - ************************************************************
2020-12-04 12:11:25,202 - 4256 - root - INFO - generacion 0 de 5
2020-12-04 12:30:18,997 - 4256 - root - INFO - ************************************************************
2020-12-04 12:30:18,997 - 4256 - root - INFO - INICIA ALGORITMO GENETICO
2020-12-04 12:30:18,997 - 4256 - root - INFO - ************************************************************
2020-12-04 12:30:51,435 - 4256 - root - INFO - generacion 0 de 10
2020-12-04 12:30:59,953 - 4256 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 12:31:31,671 - 4256 - root - INFO - Historia: [0.773340363873886, 0.7763901568910064]
2020-12-04 12:31:31,672 - 4256 - root - INFO - generacion 1 de 10
2020-12-04 12:32:19,407 - 4256 - root - INFO - Historia: [0.773340363873886, 0.7763901568910064, 0.7782329010262455]
2020-12-04 12:32:19,408 - 4256 - root - INFO - generacion 2 de 10
2020-12-04 12:33:25,741 - 4256 - root - INFO - Historia: [0.773340363873886, 0.7763901568910064, 0.7782329010262455, 0.7784278974252512]
2020-12-04 12:33:25,742 - 4256 - root - INFO - generacion 3 de 10
2020-12-04 12:35:04,576 - 4256 - root - INFO - Historia: [0.773340363873886, 0.7763901568910064, 0.7782329010262455, 0.7784278974252512, 0.7784278974252512]
2020-12-04 12:35:04,577 - 4256 - root - INFO - generacion 4 de 10
2020-12-04 12:36:43,904 - 4256 - root - INFO - Historia: [0.773340363873886, 0.7763901568910064, 0.7782329010262455, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512]
2020-12-04 12:36:43,906 - 4256 - root - INFO - generacion 5 de 10
2020-12-04 12:38:12,882 - 4256 - root - INFO - Historia: [0.773340363873886, 0.7763901568910064, 0.7782329010262455, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512]
2020-12-04 12:38:12,884 - 4256 - root - INFO - generacion 6 de 10
2020-12-04 12:39:43,155 - 4256 - root - INFO - Historia: [0.773340363873886, 0.7763901568910064, 0.7782329010262455, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512]
2020-12-04 12:39:43,157 - 4256 - root - INFO - generacion 7 de 10
2020-12-04 12:41:20,749 - 4256 - root - INFO - Historia: [0.773340363873886, 0.7763901568910064, 0.7782329010262455, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512]
2020-12-04 12:41:20,750 - 4256 - root - INFO - generacion 8 de 10
2020-12-04 12:42:44,459 - 4256 - root - INFO - Historia: [0.773340363873886, 0.7763901568910064, 0.7782329010262455, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512]
2020-12-04 12:42:44,460 - 4256 - root - INFO - generacion 9 de 10
2020-12-04 12:44:20,411 - 4256 - root - INFO - Historia: [0.773340363873886, 0.7763901568910064, 0.7782329010262455, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512, 0.7784278974252512]
2020-12-04 12:44:30,133 - 4256 - root - INFO - ************************************************************
2020-12-04 12:44:30,133 - 4256 - root - INFO - FIN ALGORITMO GENETICO: tiempo 851.1288 mins
2020-12-04 12:44:30,133 - 4256 - root - INFO - ************************************************************
2020-12-04 12:44:30,133 - 4256 - root - INFO - La mejor solucion fue
2020-12-04 12:44:30,134 - 4256 - root - INFO - {'layer_sizes': (27, 24, 98), 'activation': 'identity', 'alpha': 0.31792361654988777, 'learning_rate_init': 0.7021184931450928, 'fitness': 0.7784278974252512, 'learning_rate_init_bin': '[]', 'alpha_bin': '[]'}
2020-12-04 13:04:45,292 - 8824 - root - INFO - ************************************************************
2020-12-04 13:04:45,293 - 8824 - root - INFO - INICIA ALGORITMO GENETICO
2020-12-04 13:04:45,293 - 8824 - root - INFO - ************************************************************
2020-12-04 13:10:12,035 - 8824 - root - INFO - generacion 0 de 20
2020-12-04 13:11:19,686 - 8824 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 13:12:16,176 - 8824 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 13:12:42,863 - 8824 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 13:13:34,291 - 8824 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 13:14:04,591 - 8824 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 13:24:21,142 - 8824 - root - INFO - ************************************************************
2020-12-04 13:24:21,142 - 8824 - root - INFO - INICIA ALGORITMO GENETICO
2020-12-04 13:24:21,142 - 8824 - root - INFO - ************************************************************
2020-12-04 16:19:53,356 - 484 - root - INFO - ************************************************************
2020-12-04 16:19:53,357 - 484 - root - INFO - INICIA ALGORITMO GENETICO
2020-12-04 16:19:53,357 - 484 - root - INFO - ************************************************************
2020-12-04 16:20:33,657 - 484 - root - INFO - generacion 0 de 10
2020-12-04 16:20:45,465 - 484 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 16:21:18,817 - 484 - root - INFO - Historia: [0.773340363873886, 0.7763901568910064]
2020-12-04 16:21:18,818 - 484 - root - INFO - generacion 1 de 10
2020-12-04 16:22:05,349 - 484 - root - INFO - Historia: [0.773340363873886, 0.7763901568910064, 0.7782329010262455]
2020-12-04 16:22:05,350 - 484 - root - INFO - generacion 2 de 10
2020-12-04 16:23:13,130 - 484 - root - INFO - Historia: [0.773340363873886, 0.7763901568910064, 0.7782329010262455, 0.7784278974252512]
2020-12-04 16:23:13,132 - 484 - root - INFO - generacion 3 de 10
2020-12-04 16:24:21,160 - 10412 - root - INFO - ************************************************************
2020-12-04 16:24:21,160 - 10412 - root - INFO - INICIA ALGORITMO GENETICO
2020-12-04 16:24:21,160 - 10412 - root - INFO - ************************************************************
2020-12-04 16:29:45,187 - 10412 - root - INFO - generacion 0 de 20
2020-12-04 16:30:56,854 - 10412 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 16:31:53,875 - 10412 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 16:32:21,636 - 10412 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 16:33:11,721 - 10412 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 16:33:41,417 - 10412 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 16:36:06,827 - 12924 - root - INFO - ************************************************************
2020-12-04 16:36:06,827 - 12924 - root - INFO - INICIA ALGORITMO GENETICO
2020-12-04 16:36:06,827 - 12924 - root - INFO - ************************************************************
2020-12-04 16:44:37,747 - 12924 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 16:46:01,664 - 12924 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 16:46:29,357 - 12924 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 16:47:19,804 - 12924 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 16:47:50,455 - 12924 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 16:48:15,954 - 12924 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 16:55:07,268 - 12888 - root - INFO - ************************************************************
2020-12-04 16:55:07,269 - 12888 - root - INFO - INICIA ALGORITMO GENETICO
2020-12-04 16:55:07,269 - 12888 - root - INFO - ************************************************************
2020-12-04 16:55:19,087 - 7704 - root - INFO - ************************************************************
2020-12-04 16:55:19,087 - 7704 - root - INFO - INICIA ALGORITMO GENETICO
2020-12-04 16:55:19,087 - 7704 - root - INFO - ************************************************************
2020-12-04 16:55:37,115 - 1476 - root - INFO - ************************************************************
2020-12-04 16:55:37,116 - 1476 - root - INFO - INICIA ALGORITMO GENETICO
2020-12-04 16:55:37,116 - 1476 - root - INFO - ************************************************************
2020-12-04 17:05:47,167 - 12888 - root - INFO - generacion 0 de 20
2020-12-04 17:06:11,276 - 7704 - root - INFO - generacion 0 de 20
2020-12-04 17:06:25,451 - 1476 - root - INFO - generacion 0 de 20
2020-12-04 17:07:59,468 - 12888 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:08:22,822 - 7704 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:08:37,055 - 1476 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:09:45,637 - 12888 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:10:08,642 - 7704 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:10:23,225 - 1476 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:10:37,879 - 12888 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:11:01,760 - 7704 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:11:16,454 - 1476 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:12:14,235 - 12888 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:12:37,837 - 7704 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:12:51,265 - 1476 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:13:10,949 - 12888 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:13:28,841 - 12888 - root - INFO - Historia: [0.7798600108828153, 0.7798600108828153]
2020-12-04 17:13:28,843 - 12888 - root - INFO - generacion 1 de 20
2020-12-04 17:13:34,220 - 7704 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:13:47,841 - 1476 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:13:51,647 - 7704 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 0
2020-12-04 17:13:51,647 - 7704 - root - INFO - Inicia busqueda exahustiva
2020-12-04 17:14:05,708 - 1476 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 0
2020-12-04 17:14:23,002 - 7704 - root - INFO - Mejora la solucion con la busqueda exahustiva: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-12-04 17:14:42,867 - 7704 - root - INFO - Encuentra mejor solucion en busqueda exahustiva
2020-12-04 17:14:42,868 - 7704 - root - INFO - Agrega a la poblacion el mejor individuo de la BH
2020-12-04 17:14:42,868 - 7704 - root - INFO - AGREGADO:{'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-12-04 17:14:42,868 - 7704 - root - INFO - Historia: [0.7798600108828153, 0.780008797855261]
2020-12-04 17:14:42,870 - 7704 - root - INFO - generacion 1 de 20
2020-12-04 17:15:09,456 - 1476 - root - INFO - Mejora la solucion con la busqueda local: {'layer_sizes': (64,), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7807711659860083}
2020-12-04 17:15:09,457 - 1476 - root - INFO - Encuentra mejor solucion en busqueda local
2020-12-04 17:15:09,457 - 1476 - root - INFO - Agrega a la poblacion el mejor individuo de LS
2020-12-04 17:15:09,457 - 1476 - root - INFO - AGREGADO:{'layer_sizes': (64,), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7807711659860083}
2020-12-04 17:15:09,457 - 1476 - root - INFO - Historia: [0.7798600108828153, 0.7807711659860083]
2020-12-04 17:15:09,459 - 1476 - root - INFO - generacion 1 de 20
2020-12-04 17:16:42,670 - 12888 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:17:53,339 - 7704 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:18:23,236 - 1476 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:25:17,093 - 12888 - root - INFO - Historia: [0.7798600108828153, 0.7798600108828153, 0.7803836885813302]
2020-12-04 17:25:17,094 - 12888 - root - INFO - generacion 2 de 20
2020-12-04 17:26:40,985 - 7704 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 1
2020-12-04 17:26:40,986 - 7704 - root - INFO - Inicia busqueda exahustiva
2020-12-04 17:27:11,114 - 1476 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 1
2020-12-04 17:27:33,407 - 7704 - root - INFO - Historia: [0.7798600108828153, 0.780008797855261, 0.780008797855261]
2020-12-04 17:27:33,408 - 7704 - root - INFO - generacion 2 de 20
2020-12-04 17:28:42,039 - 1476 - root - INFO - Mejora la solucion con la busqueda local: {'layer_sizes': (62, 68), 'activation': 'identity', 'alpha': 1.0000900000000001, 'learning_rate_init': 0.001, 'fitness': 0.7816841469345552}
2020-12-04 17:28:42,040 - 1476 - root - INFO - Encuentra mejor solucion en busqueda local
2020-12-04 17:28:42,040 - 1476 - root - INFO - Agrega a la poblacion el mejor individuo de LS
2020-12-04 17:28:42,040 - 1476 - root - INFO - AGREGADO:{'layer_sizes': (62, 68), 'activation': 'identity', 'alpha': 1.0000900000000001, 'learning_rate_init': 0.001, 'fitness': 0.7816841469345552}
2020-12-04 17:28:42,041 - 1476 - root - INFO - Historia: [0.7798600108828153, 0.7807711659860083, 0.7816841469345552]
2020-12-04 17:28:42,042 - 1476 - root - INFO - generacion 2 de 20
2020-12-04 17:30:10,234 - 7704 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:32:22,480 - 1476 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:35:50,536 - 1476 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:37:49,496 - 7704 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:41:47,383 - 12888 - root - INFO - Historia: [0.7798600108828153, 0.7798600108828153, 0.7803836885813302, 0.7814769329107887]
2020-12-04 17:41:47,384 - 12888 - root - INFO - generacion 3 de 20
2020-12-04 17:42:08,265 - 1476 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 2
2020-12-04 17:42:48,309 - 7704 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 2
2020-12-04 17:42:48,309 - 7704 - root - INFO - Inicia busqueda exahustiva
2020-12-04 17:42:55,927 - 7704 - root - INFO - Mejora la solucion con la busqueda exahustiva: {'layer_sizes': (93,), 'activation': 'identity', 'alpha': 0.7086664131515455, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7814959683197961}
2020-12-04 17:43:10,208 - 7704 - root - INFO - Mejora la solucion con la busqueda exahustiva: {'layer_sizes': (93, 109), 'activation': 'identity', 'alpha': 0.7086664131515455, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7817402042716933}
2020-12-04 17:43:24,505 - 7704 - root - INFO - Mejora la solucion con la busqueda exahustiva: {'layer_sizes': (93, 109, 119), 'activation': 'identity', 'alpha': 0.7086664131515455, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7818400042017751}
2020-12-04 17:43:50,097 - 1476 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-12-04 17:43:50,098 - 1476 - root - INFO - Historia: [0.7798600108828153, 0.7807711659860083, 0.7816841469345552, 0.7823050703220453]
2020-12-04 17:43:50,099 - 1476 - root - INFO - generacion 3 de 20
2020-12-04 17:44:46,714 - 7704 - root - INFO - Encuentra mejor solucion en busqueda exahustiva
2020-12-04 17:44:46,715 - 7704 - root - INFO - Agrega a la poblacion el mejor individuo de la BH
2020-12-04 17:44:46,715 - 7704 - root - INFO - AGREGADO:{'layer_sizes': (93, 109, 119), 'activation': 'identity', 'alpha': 0.7086664131515455, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7818400042017751}
2020-12-04 17:44:46,715 - 7704 - root - INFO - Historia: [0.7798600108828153, 0.780008797855261, 0.780008797855261, 0.7818400042017751]
2020-12-04 17:44:46,717 - 7704 - root - INFO - generacion 3 de 20
2020-12-04 17:46:28,836 - 7704 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:51:02,850 - 7704 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 17:57:59,867 - 1476 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 3
2020-12-04 18:01:32,774 - 12888 - root - INFO - Historia: [0.7798600108828153, 0.7798600108828153, 0.7803836885813302, 0.7814769329107887, 0.7816818354920329]
2020-12-04 18:01:32,775 - 12888 - root - INFO - generacion 4 de 20
2020-12-04 18:02:46,493 - 1476 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-12-04 18:02:46,493 - 1476 - root - INFO - Historia: [0.7798600108828153, 0.7807711659860083, 0.7816841469345552, 0.7823050703220453, 0.7824632973034478]
2020-12-04 18:02:46,494 - 1476 - root - INFO - generacion 4 de 20
2020-12-04 18:08:25,411 - 7704 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 3
2020-12-04 18:08:25,412 - 7704 - root - INFO - Inicia busqueda exahustiva
2020-12-04 18:10:21,511 - 7704 - root - INFO - Historia: [0.7798600108828153, 0.780008797855261, 0.780008797855261, 0.7818400042017751, 0.7818400042017751]
2020-12-04 18:10:21,513 - 7704 - root - INFO - generacion 4 de 20
2020-12-04 18:16:34,531 - 12888 - root - INFO - Historia: [0.7798600108828153, 0.7798600108828153, 0.7803836885813302, 0.7814769329107887, 0.7816818354920329, 0.7821798833719914]
2020-12-04 18:16:34,532 - 12888 - root - INFO - generacion 5 de 20
2020-12-04 18:18:57,263 - 1476 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 4
2020-12-04 18:29:03,538 - 1476 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-12-04 18:29:03,539 - 1476 - root - INFO - Historia: [0.7798600108828153, 0.7807711659860083, 0.7816841469345552, 0.7823050703220453, 0.7824632973034478, 0.7832440598549401]
2020-12-04 18:29:03,540 - 1476 - root - INFO - generacion 5 de 20
2020-12-04 18:33:13,950 - 7704 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 18:33:13,950 - 7704 - root - INFO - ANTES: {'layer_sizes': (93, 109, 119), 'activation': 'identity', 'alpha': 0.7086664131515455, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7818400042017751}
2020-12-04 18:33:13,951 - 7704 - root - INFO - AHORA: {'layer_sizes': (93, 109, 119), 'activation': 'identity', 'alpha': 0.7086664131515455, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7818400042017751}
2020-12-04 18:33:13,951 - 7704 - root - INFO - Historia: [0.7798600108828153, 0.780008797855261, 0.780008797855261, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751]
2020-12-04 18:33:13,953 - 7704 - root - INFO - generacion 5 de 20
2020-12-04 18:37:31,827 - 12888 - root - INFO - Historia: [0.7798600108828153, 0.7798600108828153, 0.7803836885813302, 0.7814769329107887, 0.7816818354920329, 0.7821798833719914, 0.7821798833719914]
2020-12-04 18:37:31,828 - 12888 - root - INFO - generacion 6 de 20
2020-12-04 18:46:29,834 - 1476 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 18:46:29,834 - 1476 - root - INFO - ANTES: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 18:46:29,834 - 1476 - root - INFO - AHORA: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 18:46:29,834 - 1476 - root - INFO - Historia: [0.7798600108828153, 0.7807711659860083, 0.7816841469345552, 0.7823050703220453, 0.7824632973034478, 0.7832440598549401, 0.7832440598549401]
2020-12-04 18:46:29,836 - 1476 - root - INFO - generacion 6 de 20
2020-12-04 18:52:02,739 - 1476 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 18:52:55,278 - 12888 - root - INFO - Historia: [0.7798600108828153, 0.7798600108828153, 0.7803836885813302, 0.7814769329107887, 0.7816818354920329, 0.7821798833719914, 0.7821798833719914, 0.7830048061299921]
2020-12-04 18:52:55,279 - 12888 - root - INFO - generacion 7 de 20
2020-12-04 18:55:11,134 - 7704 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 18:55:11,134 - 7704 - root - INFO - ANTES: {'layer_sizes': (93, 109, 119), 'activation': 'identity', 'alpha': 0.7086664131515455, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7818400042017751}
2020-12-04 18:55:11,134 - 7704 - root - INFO - AHORA: {'layer_sizes': (93, 109, 119), 'activation': 'identity', 'alpha': 0.7086664131515455, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7818400042017751}
2020-12-04 18:55:11,134 - 7704 - root - INFO - Historia: [0.7798600108828153, 0.780008797855261, 0.780008797855261, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751]
2020-12-04 18:55:11,136 - 7704 - root - INFO - generacion 6 de 20
2020-12-04 19:01:31,924 - 1476 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 19:01:31,925 - 1476 - root - INFO - ANTES: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 19:01:31,925 - 1476 - root - INFO - AHORA: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 19:01:31,925 - 1476 - root - INFO - Historia: [0.7798600108828153, 0.7807711659860083, 0.7816841469345552, 0.7823050703220453, 0.7824632973034478, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401]
2020-12-04 19:01:31,926 - 1476 - root - INFO - generacion 7 de 20
2020-12-04 19:13:22,629 - 7704 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 19:13:22,630 - 7704 - root - INFO - ANTES: {'layer_sizes': (93, 109, 119), 'activation': 'identity', 'alpha': 0.7086664131515455, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7818400042017751}
2020-12-04 19:13:22,630 - 7704 - root - INFO - AHORA: {'layer_sizes': (93, 109, 119), 'activation': 'identity', 'alpha': 0.7086664131515455, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7818400042017751}
2020-12-04 19:13:22,630 - 7704 - root - INFO - Historia: [0.7798600108828153, 0.780008797855261, 0.780008797855261, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751]
2020-12-04 19:13:22,631 - 7704 - root - INFO - generacion 7 de 20
2020-12-04 19:13:31,591 - 12888 - root - INFO - Historia: [0.7798600108828153, 0.7798600108828153, 0.7803836885813302, 0.7814769329107887, 0.7816818354920329, 0.7821798833719914, 0.7821798833719914, 0.7830048061299921, 0.7830048061299921]
2020-12-04 19:13:31,592 - 12888 - root - INFO - generacion 8 de 20
2020-12-04 19:15:43,990 - 1476 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 19:15:43,990 - 1476 - root - INFO - ANTES: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 19:15:43,990 - 1476 - root - INFO - AHORA: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 19:15:43,990 - 1476 - root - INFO - Historia: [0.7798600108828153, 0.7807711659860083, 0.7816841469345552, 0.7823050703220453, 0.7824632973034478, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401]
2020-12-04 19:15:43,991 - 1476 - root - INFO - generacion 8 de 20
2020-12-04 19:29:08,683 - 1476 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 19:29:08,683 - 1476 - root - INFO - ANTES: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 19:29:08,683 - 1476 - root - INFO - AHORA: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 19:29:08,683 - 1476 - root - INFO - Historia: [0.7798600108828153, 0.7807711659860083, 0.7816841469345552, 0.7823050703220453, 0.7824632973034478, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401]
2020-12-04 19:29:08,685 - 1476 - root - INFO - generacion 9 de 20
2020-12-04 19:32:23,596 - 12888 - root - INFO - Historia: [0.7798600108828153, 0.7798600108828153, 0.7803836885813302, 0.7814769329107887, 0.7816818354920329, 0.7821798833719914, 0.7821798833719914, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921]
2020-12-04 19:32:23,598 - 12888 - root - INFO - generacion 9 de 20
2020-12-04 19:35:47,398 - 7704 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 19:35:47,398 - 7704 - root - INFO - ANTES: {'layer_sizes': (93, 109, 119), 'activation': 'identity', 'alpha': 0.7086664131515455, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7818400042017751}
2020-12-04 19:35:47,399 - 7704 - root - INFO - AHORA: {'layer_sizes': (93, 109, 119), 'activation': 'identity', 'alpha': 0.7086664131515455, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7818400042017751}
2020-12-04 19:35:47,399 - 7704 - root - INFO - Historia: [0.7798600108828153, 0.780008797855261, 0.780008797855261, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751]
2020-12-04 19:35:47,400 - 7704 - root - INFO - generacion 8 de 20
2020-12-04 19:43:21,547 - 1476 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 19:43:21,547 - 1476 - root - INFO - ANTES: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 19:43:21,547 - 1476 - root - INFO - AHORA: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 19:43:21,547 - 1476 - root - INFO - Historia: [0.7798600108828153, 0.7807711659860083, 0.7816841469345552, 0.7823050703220453, 0.7824632973034478, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401]
2020-12-04 19:43:21,548 - 1476 - root - INFO - generacion 10 de 20
2020-12-04 19:52:23,777 - 12888 - root - INFO - Historia: [0.7798600108828153, 0.7798600108828153, 0.7803836885813302, 0.7814769329107887, 0.7816818354920329, 0.7821798833719914, 0.7821798833719914, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921]
2020-12-04 19:52:23,779 - 12888 - root - INFO - generacion 10 de 20
2020-12-04 19:57:21,235 - 1476 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 19:57:21,235 - 1476 - root - INFO - ANTES: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 19:57:21,235 - 1476 - root - INFO - AHORA: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 19:57:21,236 - 1476 - root - INFO - Historia: [0.7798600108828153, 0.7807711659860083, 0.7816841469345552, 0.7823050703220453, 0.7824632973034478, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401]
2020-12-04 19:57:21,237 - 1476 - root - INFO - generacion 11 de 20
2020-12-04 20:02:32,188 - 7704 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 20:02:32,188 - 7704 - root - INFO - ANTES: {'layer_sizes': (93, 109, 119), 'activation': 'identity', 'alpha': 0.7086664131515455, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7818400042017751}
2020-12-04 20:02:32,188 - 7704 - root - INFO - AHORA: {'layer_sizes': (93, 109, 119), 'activation': 'identity', 'alpha': 0.7086664131515455, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7818400042017751}
2020-12-04 20:02:32,188 - 7704 - root - INFO - Historia: [0.7798600108828153, 0.780008797855261, 0.780008797855261, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751]
2020-12-04 20:02:32,189 - 7704 - root - INFO - generacion 9 de 20
2020-12-04 20:10:35,627 - 1476 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 20:10:35,627 - 1476 - root - INFO - ANTES: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 20:10:35,627 - 1476 - root - INFO - AHORA: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 20:10:35,627 - 1476 - root - INFO - Historia: [0.7798600108828153, 0.7807711659860083, 0.7816841469345552, 0.7823050703220453, 0.7824632973034478, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401]
2020-12-04 20:10:35,628 - 1476 - root - INFO - generacion 12 de 20
2020-12-04 20:12:37,549 - 12888 - root - INFO - Historia: [0.7798600108828153, 0.7798600108828153, 0.7803836885813302, 0.7814769329107887, 0.7816818354920329, 0.7821798833719914, 0.7821798833719914, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921]
2020-12-04 20:12:37,551 - 12888 - root - INFO - generacion 11 de 20
2020-12-04 20:21:51,135 - 1476 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 20:21:51,135 - 1476 - root - INFO - ANTES: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 20:21:51,135 - 1476 - root - INFO - AHORA: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 20:21:51,135 - 1476 - root - INFO - Historia: [0.7798600108828153, 0.7807711659860083, 0.7816841469345552, 0.7823050703220453, 0.7824632973034478, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401]
2020-12-04 20:21:51,137 - 1476 - root - INFO - generacion 13 de 20
2020-12-04 20:25:14,942 - 7704 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 9
2020-12-04 20:25:14,942 - 7704 - root - INFO - Inicia busqueda exahustiva
2020-12-04 20:25:33,459 - 7704 - root - INFO - Mejora la solucion con la busqueda exahustiva: {'layer_sizes': (3, 1, 1, 1), 'activation': 'identity', 'alpha': 0.7086664131515455, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7826914017174056}
2020-12-04 20:25:46,798 - 7704 - root - INFO - Encuentra mejor solucion en busqueda exahustiva
2020-12-04 20:25:46,798 - 7704 - root - INFO - Agrega a la poblacion el mejor individuo de la BH
2020-12-04 20:25:46,799 - 7704 - root - INFO - AGREGADO:{'layer_sizes': (3, 1, 1, 1), 'activation': 'identity', 'alpha': 0.7086664131515455, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7826914017174056}
2020-12-04 20:25:46,799 - 7704 - root - INFO - Historia: [0.7798600108828153, 0.780008797855261, 0.780008797855261, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7826914017174056]
2020-12-04 20:25:46,800 - 7704 - root - INFO - generacion 10 de 20
2020-12-04 20:31:48,487 - 12888 - root - INFO - Historia: [0.7798600108828153, 0.7798600108828153, 0.7803836885813302, 0.7814769329107887, 0.7816818354920329, 0.7821798833719914, 0.7821798833719914, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921]
2020-12-04 20:31:48,488 - 12888 - root - INFO - generacion 12 de 20
2020-12-04 20:33:04,396 - 1476 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 20:33:04,396 - 1476 - root - INFO - ANTES: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 20:33:04,396 - 1476 - root - INFO - AHORA: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 20:33:04,397 - 1476 - root - INFO - Historia: [0.7798600108828153, 0.7807711659860083, 0.7816841469345552, 0.7823050703220453, 0.7824632973034478, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401]
2020-12-04 20:33:04,398 - 1476 - root - INFO - generacion 14 de 20
2020-12-04 20:34:34,976 - 1476 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-04 20:43:27,228 - 1476 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 20:43:27,228 - 1476 - root - INFO - ANTES: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 20:43:27,228 - 1476 - root - INFO - AHORA: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 20:43:27,228 - 1476 - root - INFO - Historia: [0.7798600108828153, 0.7807711659860083, 0.7816841469345552, 0.7823050703220453, 0.7824632973034478, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401]
2020-12-04 20:43:27,230 - 1476 - root - INFO - generacion 15 de 20
2020-12-04 20:44:51,324 - 12888 - root - INFO - Historia: [0.7798600108828153, 0.7798600108828153, 0.7803836885813302, 0.7814769329107887, 0.7816818354920329, 0.7821798833719914, 0.7821798833719914, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921]
2020-12-04 20:44:51,325 - 12888 - root - INFO - generacion 13 de 20
2020-12-04 20:47:51,557 - 7704 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 10
2020-12-04 20:47:51,557 - 7704 - root - INFO - Inicia busqueda exahustiva
2020-12-04 20:48:22,776 - 7704 - root - INFO - Historia: [0.7798600108828153, 0.780008797855261, 0.780008797855261, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7826914017174056, 0.7826914017174056]
2020-12-04 20:48:22,777 - 7704 - root - INFO - generacion 11 de 20
2020-12-04 20:55:25,144 - 12888 - root - INFO - Historia: [0.7798600108828153, 0.7798600108828153, 0.7803836885813302, 0.7814769329107887, 0.7816818354920329, 0.7821798833719914, 0.7821798833719914, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921]
2020-12-04 20:55:25,145 - 12888 - root - INFO - generacion 14 de 20
2020-12-04 20:57:24,875 - 1476 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 20:57:24,876 - 1476 - root - INFO - ANTES: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 20:57:24,876 - 1476 - root - INFO - AHORA: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 20:57:24,876 - 1476 - root - INFO - Historia: [0.7798600108828153, 0.7807711659860083, 0.7816841469345552, 0.7823050703220453, 0.7824632973034478, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401]
2020-12-04 20:57:24,877 - 1476 - root - INFO - generacion 16 de 20
2020-12-04 21:08:51,269 - 7704 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 11
2020-12-04 21:08:51,269 - 7704 - root - INFO - Inicia busqueda exahustiva
2020-12-04 21:09:23,663 - 7704 - root - INFO - Historia: [0.7798600108828153, 0.780008797855261, 0.780008797855261, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7826914017174056, 0.7826914017174056, 0.7827094562201328]
2020-12-04 21:09:23,664 - 7704 - root - INFO - generacion 12 de 20
2020-12-04 21:10:41,381 - 12888 - root - INFO - Historia: [0.7798600108828153, 0.7798600108828153, 0.7803836885813302, 0.7814769329107887, 0.7816818354920329, 0.7821798833719914, 0.7821798833719914, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921]
2020-12-04 21:10:41,382 - 12888 - root - INFO - generacion 15 de 20
2020-12-04 21:11:44,051 - 1476 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 21:11:44,052 - 1476 - root - INFO - ANTES: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 21:11:44,052 - 1476 - root - INFO - AHORA: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 21:11:44,052 - 1476 - root - INFO - Historia: [0.7798600108828153, 0.7807711659860083, 0.7816841469345552, 0.7823050703220453, 0.7824632973034478, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401]
2020-12-04 21:11:44,053 - 1476 - root - INFO - generacion 17 de 20
2020-12-04 21:25:44,470 - 12888 - root - INFO - Historia: [0.7798600108828153, 0.7798600108828153, 0.7803836885813302, 0.7814769329107887, 0.7816818354920329, 0.7821798833719914, 0.7821798833719914, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921]
2020-12-04 21:25:44,473 - 12888 - root - INFO - generacion 16 de 20
2020-12-04 21:25:52,599 - 1476 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 21:25:52,600 - 1476 - root - INFO - ANTES: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 21:25:52,600 - 1476 - root - INFO - AHORA: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 21:25:52,600 - 1476 - root - INFO - Historia: [0.7798600108828153, 0.7807711659860083, 0.7816841469345552, 0.7823050703220453, 0.7824632973034478, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401]
2020-12-04 21:25:52,601 - 1476 - root - INFO - generacion 18 de 20
2020-12-04 21:30:32,407 - 7704 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 21:30:32,407 - 7704 - root - INFO - ANTES: {'layer_sizes': (3, 1, 1, 1), 'activation': 'identity', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7827094562201328}
2020-12-04 21:30:32,407 - 7704 - root - INFO - AHORA: {'layer_sizes': (3, 1, 1, 1), 'activation': 'identity', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7827094562201328}
2020-12-04 21:30:32,407 - 7704 - root - INFO - Historia: [0.7798600108828153, 0.780008797855261, 0.780008797855261, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7826914017174056, 0.7826914017174056, 0.7827094562201328, 0.7827094562201328]
2020-12-04 21:30:32,409 - 7704 - root - INFO - generacion 13 de 20
2020-12-04 21:38:52,802 - 1476 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 21:38:52,802 - 1476 - root - INFO - ANTES: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 21:38:52,803 - 1476 - root - INFO - AHORA: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 21:38:52,803 - 1476 - root - INFO - Historia: [0.7798600108828153, 0.7807711659860083, 0.7816841469345552, 0.7823050703220453, 0.7824632973034478, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401]
2020-12-04 21:38:52,805 - 1476 - root - INFO - generacion 19 de 20
2020-12-04 21:40:24,798 - 12888 - root - INFO - Historia: [0.7798600108828153, 0.7798600108828153, 0.7803836885813302, 0.7814769329107887, 0.7816818354920329, 0.7821798833719914, 0.7821798833719914, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921]
2020-12-04 21:40:24,799 - 12888 - root - INFO - generacion 17 de 20
2020-12-04 21:50:07,277 - 7704 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 21:50:07,278 - 7704 - root - INFO - ANTES: {'layer_sizes': (3, 1, 1, 1), 'activation': 'identity', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7827094562201328}
2020-12-04 21:50:07,278 - 7704 - root - INFO - AHORA: {'layer_sizes': (3, 1, 1, 1), 'activation': 'identity', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7827094562201328}
2020-12-04 21:50:07,278 - 7704 - root - INFO - Historia: [0.7798600108828153, 0.780008797855261, 0.780008797855261, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7826914017174056, 0.7826914017174056, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328]
2020-12-04 21:50:07,279 - 7704 - root - INFO - generacion 14 de 20
2020-12-04 21:50:11,932 - 1476 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 21:50:11,933 - 1476 - root - INFO - ANTES: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 21:50:11,933 - 1476 - root - INFO - AHORA: {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401}
2020-12-04 21:50:11,933 - 1476 - root - INFO - Historia: [0.7798600108828153, 0.7807711659860083, 0.7816841469345552, 0.7823050703220453, 0.7824632973034478, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401, 0.7832440598549401]
2020-12-04 21:50:29,895 - 1476 - root - INFO - ************************************************************
2020-12-04 21:50:29,895 - 1476 - root - INFO - FIN ALGORITMO GENETICO: tiempo 17692.7602 mins
2020-12-04 21:50:29,896 - 1476 - root - INFO - ************************************************************
2020-12-04 21:50:29,896 - 1476 - root - INFO - La mejor solucion fue
2020-12-04 21:50:29,896 - 1476 - root - INFO - {'layer_sizes': (93, 68, 118), 'activation': 'identity', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'fitness': 0.7832440598549401, 'learning_rate_init_bin': '[]', 'alpha_bin': '[]'}
2020-12-04 21:51:42,124 - 12888 - root - INFO - Historia: [0.7798600108828153, 0.7798600108828153, 0.7803836885813302, 0.7814769329107887, 0.7816818354920329, 0.7821798833719914, 0.7821798833719914, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921]
2020-12-04 21:51:42,126 - 12888 - root - INFO - generacion 18 de 20
2020-12-04 22:05:18,099 - 12888 - root - INFO - Historia: [0.7798600108828153, 0.7798600108828153, 0.7803836885813302, 0.7814769329107887, 0.7816818354920329, 0.7821798833719914, 0.7821798833719914, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921]
2020-12-04 22:05:18,100 - 12888 - root - INFO - generacion 19 de 20
2020-12-04 22:06:15,272 - 7704 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 22:06:15,272 - 7704 - root - INFO - ANTES: {'layer_sizes': (3, 1, 1, 1), 'activation': 'identity', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7827094562201328}
2020-12-04 22:06:15,273 - 7704 - root - INFO - AHORA: {'layer_sizes': (3, 1, 1, 1), 'activation': 'identity', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7827094562201328}
2020-12-04 22:06:15,273 - 7704 - root - INFO - Historia: [0.7798600108828153, 0.780008797855261, 0.780008797855261, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7826914017174056, 0.7826914017174056, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328]
2020-12-04 22:06:15,275 - 7704 - root - INFO - generacion 15 de 20
2020-12-04 22:16:22,821 - 12888 - root - INFO - Historia: [0.7798600108828153, 0.7798600108828153, 0.7803836885813302, 0.7814769329107887, 0.7816818354920329, 0.7821798833719914, 0.7821798833719914, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921, 0.7830048061299921]
2020-12-04 22:16:38,453 - 12888 - root - INFO - ************************************************************
2020-12-04 22:16:38,453 - 12888 - root - INFO - FIN ALGORITMO GENETICO: tiempo 19291.1762 mins
2020-12-04 22:16:38,454 - 12888 - root - INFO - ************************************************************
2020-12-04 22:16:38,454 - 12888 - root - INFO - La mejor solucion fue
2020-12-04 22:16:38,454 - 12888 - root - INFO - {'layer_sizes': (41, 109, 118), 'activation': 'identity', 'alpha': 0.31792361654988777, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7830048061299921, 'learning_rate_init_bin': '[]', 'alpha_bin': '[]'}
2020-12-04 22:23:50,282 - 7704 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 22:23:50,283 - 7704 - root - INFO - ANTES: {'layer_sizes': (3, 1, 1, 1), 'activation': 'identity', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7827094562201328}
2020-12-04 22:23:50,283 - 7704 - root - INFO - AHORA: {'layer_sizes': (3, 1, 1, 1), 'activation': 'identity', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7827094562201328}
2020-12-04 22:23:50,283 - 7704 - root - INFO - Historia: [0.7798600108828153, 0.780008797855261, 0.780008797855261, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7826914017174056, 0.7826914017174056, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328]
2020-12-04 22:23:50,283 - 7704 - root - INFO - generacion 16 de 20
2020-12-04 22:37:43,329 - 7704 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 22:37:43,329 - 7704 - root - INFO - ANTES: {'layer_sizes': (3, 1, 1, 1), 'activation': 'identity', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7827094562201328}
2020-12-04 22:37:43,329 - 7704 - root - INFO - AHORA: {'layer_sizes': (3, 1, 1, 1), 'activation': 'identity', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7827094562201328}
2020-12-04 22:37:43,329 - 7704 - root - INFO - Historia: [0.7798600108828153, 0.780008797855261, 0.780008797855261, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7826914017174056, 0.7826914017174056, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328]
2020-12-04 22:37:43,330 - 7704 - root - INFO - generacion 17 de 20
2020-12-04 22:47:25,149 - 7704 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 22:47:25,149 - 7704 - root - INFO - ANTES: {'layer_sizes': (3, 1, 1, 1), 'activation': 'identity', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7827094562201328}
2020-12-04 22:47:25,149 - 7704 - root - INFO - AHORA: {'layer_sizes': (3, 1, 1, 1), 'activation': 'identity', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7827094562201328}
2020-12-04 22:47:25,149 - 7704 - root - INFO - Historia: [0.7798600108828153, 0.780008797855261, 0.780008797855261, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7826914017174056, 0.7826914017174056, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328]
2020-12-04 22:47:25,150 - 7704 - root - INFO - generacion 18 de 20
2020-12-04 22:57:06,174 - 7704 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 22:57:06,174 - 7704 - root - INFO - ANTES: {'layer_sizes': (3, 1, 1, 1), 'activation': 'identity', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7827094562201328}
2020-12-04 22:57:06,174 - 7704 - root - INFO - AHORA: {'layer_sizes': (3, 1, 1, 1), 'activation': 'identity', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7827094562201328}
2020-12-04 22:57:06,174 - 7704 - root - INFO - Historia: [0.7798600108828153, 0.780008797855261, 0.780008797855261, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7826914017174056, 0.7826914017174056, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328]
2020-12-04 22:57:06,175 - 7704 - root - INFO - generacion 19 de 20
2020-12-04 23:07:21,201 - 7704 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-04 23:07:21,201 - 7704 - root - INFO - ANTES: {'layer_sizes': (3, 1, 1, 1), 'activation': 'identity', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7827094562201328}
2020-12-04 23:07:21,201 - 7704 - root - INFO - AHORA: {'layer_sizes': (3, 1, 1, 1), 'activation': 'identity', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7827094562201328}
2020-12-04 23:07:21,201 - 7704 - root - INFO - Historia: [0.7798600108828153, 0.780008797855261, 0.780008797855261, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7818400042017751, 0.7826914017174056, 0.7826914017174056, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328, 0.7827094562201328]
2020-12-04 23:07:24,045 - 7704 - root - INFO - ************************************************************
2020-12-04 23:07:24,045 - 7704 - root - INFO - FIN ALGORITMO GENETICO: tiempo 22324.9523 mins
2020-12-04 23:07:24,045 - 7704 - root - INFO - ************************************************************
2020-12-04 23:07:24,045 - 7704 - root - INFO - La mejor solucion fue
2020-12-04 23:07:24,045 - 7704 - root - INFO - {'layer_sizes': (3, 1, 1, 1), 'activation': 'identity', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.006007614678632964, 'fitness': 0.7827094562201328, 'learning_rate_init_bin': '[]', 'alpha_bin': '[]'}
2020-12-06 11:32:21,099 - 14280 - root - INFO - ************************************************************
2020-12-06 11:32:21,099 - 14280 - root - INFO - INICIA ALGORITMO GENETICO
2020-12-06 11:32:21,099 - 14280 - root - INFO - ************************************************************
2020-12-06 11:38:03,675 - 14280 - root - INFO - generacion 0 de 20
2020-12-06 11:39:16,426 - 14280 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-06 11:40:15,707 - 14280 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-06 11:40:44,241 - 14280 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-06 11:41:36,059 - 14280 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-06 11:42:06,562 - 14280 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-06 11:42:15,627 - 14280 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 0
2020-12-06 11:42:15,627 - 14280 - root - INFO - Inicia busqueda exahustiva
2020-12-06 11:42:32,023 - 14280 - root - INFO - Mejora la solucion con la busqueda exahustiva: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-12-06 11:42:42,067 - 14280 - root - INFO - Encuentra mejor solucion en busqueda exahustiva
2020-12-06 11:42:42,067 - 14280 - root - INFO - Agrega a la poblacion el mejor individuo de la BH
2020-12-06 11:42:42,067 - 14280 - root - INFO - AGREGADO:{'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.6403525606738166, 'learning_rate_init': 0.022013225747051824, 'fitness': 0.780008797855261}
2020-12-06 11:42:42,068 - 14280 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 0
2020-12-06 11:43:32,689 - 14280 - root - INFO - Mejora la solucion con la busqueda local: {'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7807811401518505}
2020-12-06 11:43:32,690 - 14280 - root - INFO - Encuentra mejor solucion en busqueda local
2020-12-06 11:43:32,690 - 14280 - root - INFO - Agrega a la poblacion el mejor individuo de LS
2020-12-06 11:43:32,690 - 14280 - root - INFO - AGREGADO:{'layer_sizes': (64,), 'activation': 'logistic', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7807811401518505}
2020-12-06 11:43:32,691 - 14280 - root - INFO - Historia: [0.7798600108828153, 0.7807811401518505]
2020-12-06 11:43:32,691 - 14280 - root - INFO - generacion 1 de 20
2020-12-06 11:45:20,030 - 14280 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-06 11:50:09,325 - 14280 - root - INFO - Inicia busqueda exahustiva en la generacion al final de la generacion 1
2020-12-06 11:50:09,325 - 14280 - root - INFO - Inicia busqueda exahustiva
2020-12-06 11:50:15,932 - 14280 - root - INFO - Mejora la solucion con la busqueda exahustiva: {'layer_sizes': (42,), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7818400430495487}
2020-12-06 11:50:25,034 - 14280 - root - INFO - Mejora la solucion con la busqueda exahustiva: {'layer_sizes': (42, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7822113306446271}
2020-12-06 11:50:44,347 - 14280 - root - INFO - Mejora la solucion con la busqueda exahustiva: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 11:51:04,130 - 14280 - root - INFO - Encuentra mejor solucion en busqueda exahustiva
2020-12-06 11:51:04,130 - 14280 - root - INFO - Agrega a la poblacion el mejor individuo de la BH
2020-12-06 11:51:04,130 - 14280 - root - INFO - AGREGADO:{'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 11:51:04,130 - 14280 - root - INFO - Inicia busqueda local en la generacion al final de la generacion 1
2020-12-06 11:53:01,560 - 14280 - root - INFO - NO HAY MEJORA EN EL VECINDARIO
2020-12-06 11:53:01,560 - 14280 - root - INFO - Historia: [0.7798600108828153, 0.7807811401518505, 0.7826169790953528]
2020-12-06 11:53:01,561 - 14280 - root - INFO - generacion 2 de 20
2020-12-06 12:00:38,048 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 12:00:38,048 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:00:38,048 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:00:38,049 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 12:00:38,049 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:00:38,049 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:00:38,049 - 14280 - root - INFO - Historia: [0.7798600108828153, 0.7807811401518505, 0.7826169790953528, 0.7826169790953528]
2020-12-06 12:00:38,049 - 14280 - root - INFO - generacion 3 de 20
2020-12-06 12:00:46,547 - 14280 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-06 12:05:54,732 - 14280 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-06 12:08:49,881 - 14280 - root - INFO - MUTA HIJO NO TAN BUENO
2020-12-06 12:08:50,411 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 12:08:50,411 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:08:50,411 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:08:50,411 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 12:08:50,411 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:08:50,411 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:08:50,411 - 14280 - root - INFO - Historia: [0.7798600108828153, 0.7807811401518505, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528]
2020-12-06 12:08:50,412 - 14280 - root - INFO - generacion 4 de 20
2020-12-06 12:17:21,799 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 12:17:21,800 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:17:21,800 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:17:21,800 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 12:17:21,800 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:17:21,800 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:17:21,800 - 14280 - root - INFO - Historia: [0.7798600108828153, 0.7807811401518505, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528]
2020-12-06 12:17:21,801 - 14280 - root - INFO - generacion 5 de 20
2020-12-06 12:28:38,672 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 12:28:38,672 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:28:38,673 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:28:38,673 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 12:28:38,673 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:28:38,673 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:28:38,673 - 14280 - root - INFO - Historia: [0.7798600108828153, 0.7807811401518505, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528]
2020-12-06 12:28:38,674 - 14280 - root - INFO - generacion 6 de 20
2020-12-06 12:39:51,022 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 12:39:51,022 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:39:51,022 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:39:51,022 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 12:39:51,022 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:39:51,022 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:39:51,022 - 14280 - root - INFO - Historia: [0.7798600108828153, 0.7807811401518505, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528]
2020-12-06 12:39:51,023 - 14280 - root - INFO - generacion 7 de 20
2020-12-06 12:52:07,103 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 12:52:07,103 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:52:07,103 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:52:07,103 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 12:52:07,103 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:52:07,104 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 12:52:07,104 - 14280 - root - INFO - Historia: [0.7798600108828153, 0.7807811401518505, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528]
2020-12-06 12:52:07,104 - 14280 - root - INFO - generacion 8 de 20
2020-12-06 13:03:38,394 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 13:03:38,394 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 13:03:38,394 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 13:03:38,394 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 13:03:38,394 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 13:03:38,394 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 13:03:38,394 - 14280 - root - INFO - Historia: [0.7798600108828153, 0.7807811401518505, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528]
2020-12-06 13:03:38,395 - 14280 - root - INFO - generacion 9 de 20
2020-12-06 13:15:06,859 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 13:15:06,859 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 13:15:06,859 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 13:15:06,859 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 13:15:06,859 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 13:15:06,859 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 13:15:06,859 - 14280 - root - INFO - Historia: [0.7798600108828153, 0.7807811401518505, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528]
2020-12-06 13:15:06,860 - 14280 - root - INFO - generacion 10 de 20
2020-12-06 13:27:27,955 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 13:27:27,955 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 13:27:27,956 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 13:27:27,956 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 13:27:27,956 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 13:27:27,956 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 13:27:27,956 - 14280 - root - INFO - Historia: [0.7798600108828153, 0.7807811401518505, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528]
2020-12-06 13:27:27,956 - 14280 - root - INFO - generacion 11 de 20
2020-12-06 13:40:04,281 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 13:40:04,281 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 13:40:04,281 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 13:40:04,281 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 13:40:04,281 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 13:40:04,281 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 13:40:04,282 - 14280 - root - INFO - Historia: [0.7798600108828153, 0.7807811401518505, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528]
2020-12-06 13:40:04,282 - 14280 - root - INFO - generacion 12 de 20
2020-12-06 13:51:07,145 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 13:51:07,145 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 13:51:07,145 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 13:51:07,145 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 13:51:07,145 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 13:51:07,145 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 13:51:07,145 - 14280 - root - INFO - Historia: [0.7798600108828153, 0.7807811401518505, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528]
2020-12-06 13:51:07,147 - 14280 - root - INFO - generacion 13 de 20
2020-12-06 14:03:21,017 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 14:03:21,017 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 14:03:21,017 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 14:03:21,017 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 14:03:21,017 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 14:03:21,017 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 14:03:21,017 - 14280 - root - INFO - Historia: [0.7798600108828153, 0.7807811401518505, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528]
2020-12-06 14:03:21,018 - 14280 - root - INFO - generacion 14 de 20
2020-12-06 14:15:34,431 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 14:15:34,432 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 14:15:34,432 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 14:15:34,432 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 14:15:34,432 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 14:15:34,432 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 14:15:34,432 - 14280 - root - INFO - Historia: [0.7798600108828153, 0.7807811401518505, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528]
2020-12-06 14:15:34,433 - 14280 - root - INFO - generacion 15 de 20
2020-12-06 14:28:02,783 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 14:28:02,783 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 14:28:02,784 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 14:28:02,784 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 14:28:02,784 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 14:28:02,784 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 14:28:02,784 - 14280 - root - INFO - Historia: [0.7798600108828153, 0.7807811401518505, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528]
2020-12-06 14:28:02,785 - 14280 - root - INFO - generacion 16 de 20
2020-12-06 14:40:08,311 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 14:40:08,311 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 14:40:08,311 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 14:40:08,311 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 14:40:08,311 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 14:40:08,311 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 14:40:08,312 - 14280 - root - INFO - Historia: [0.7798600108828153, 0.7807811401518505, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528]
2020-12-06 14:40:08,312 - 14280 - root - INFO - generacion 17 de 20
2020-12-06 14:53:52,071 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 14:53:52,071 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 14:53:52,071 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 14:53:52,071 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 14:53:52,071 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 14:53:52,071 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 14:53:52,071 - 14280 - root - INFO - Historia: [0.7798600108828153, 0.7807811401518505, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528]
2020-12-06 14:53:52,072 - 14280 - root - INFO - generacion 18 de 20
2020-12-06 15:07:10,990 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 15:07:10,990 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 15:07:10,990 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 15:07:10,990 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 15:07:10,991 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 15:07:10,991 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 15:07:10,991 - 14280 - root - INFO - Historia: [0.7798600108828153, 0.7807811401518505, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528]
2020-12-06 15:07:10,991 - 14280 - root - INFO - generacion 19 de 20
2020-12-06 15:18:51,810 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 15:18:51,810 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 15:18:51,810 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 15:18:51,810 - 14280 - root - INFO - YA SE EVALUO LA SOLUCION
2020-12-06 15:18:51,810 - 14280 - root - INFO - ANTES: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 15:18:51,810 - 14280 - root - INFO - AHORA: {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528}
2020-12-06 15:18:51,810 - 14280 - root - INFO - Historia: [0.7798600108828153, 0.7807811401518505, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528, 0.7826169790953528]
2020-12-06 15:19:01,427 - 14280 - root - INFO - ************************************************************
2020-12-06 15:19:01,427 - 14280 - root - INFO - FIN ALGORITMO GENETICO: tiempo 13600.3207 mins
2020-12-06 15:19:01,427 - 14280 - root - INFO - ************************************************************
2020-12-06 15:19:01,427 - 14280 - root - INFO - La mejor solucion fue
2020-12-06 15:19:01,427 - 14280 - root - INFO - {'layer_sizes': (42, 1, 1, 1), 'activation': 'identity', 'alpha': 0.5000950000000001, 'learning_rate_init': 0.001, 'fitness': 0.7826169790953528, 'learning_rate_init_bin': '[]', 'alpha_bin': '[]'}
